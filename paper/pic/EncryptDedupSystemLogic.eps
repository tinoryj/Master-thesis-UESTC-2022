%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 776.000000 340.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.2 (Build 18C54) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 776 340
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 776 340
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAI+PingFangHK-Regular 001.003%%CreationDate: 12/11/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAI+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid1325 putdup 2 /gid1391 putdup 3 /gid1586 putdup 4 /gid1622 putdup 5 /gid1698 putdup 6 /gid1746 putdup 7 /gid2264 putdup 8 /gid2330 putdup 9 /gid2388 putdup 10 /gid2619 putdup 11 /gid2626 putdup 12 /gid2678 putdup 13 /gid2906 putdup 14 /gid3312 putdup 15 /gid3357 putdup 16 /gid3524 putdup 17 /gid3528 putdup 18 /gid3761 putdup 19 /gid4137 putdup 20 /gid4564 putdup 21 /gid4696 putdup 22 /gid4913 putdup 23 /gid5330 putdup 24 /gid5425 putdup 25 /gid5462 putdup 26 /gid6595 putdup 27 /gid6923 putdup 28 /gid7014 putdup 29 /gid7167 putdup 30 /gid7212 putdup 31 /gid7483 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6CECCA28ED621E85EC5FB40A946A1CD2BE4C65BECD7B4EFF8F2DD11C2B6DF94E62408E24956BDEA344367EF43A0AC461C1DC8E167B32B266A48D962BF7DFA1DC0D3E9701B48BA8573841E92C775E599448EA77982CDEFF445D556809ABF596B74C5CE26ED967012F042DDC54430F86AFB8035EA492583D5D868AB35294D520963F099A7A64D5CAFE960B00CC1AC4E0556676DCCCC98BD79EBA85CFF88DE5A8343B7CA6C6D952448009A44E421DE985555F401701EEF17EAC1CFA2CD42EAFB317DA0E00AEE6A09DD97EA242B6BF4D3C62C5B2B7716ADD11560A221B8A5774AAB3C2FC42FB4B06877C8BECAF8AF82C533F2086D98EC198B6F2E2D04DC243A2368DD4CDF65C52C8424B28145F16A2789594CE1AF66BD700F7AFC694E7AFE6838A608FA6D8761DF1C29842FB0438A43968122BFC9DF1CBE9CD9980CDA38779E6D3152503F1AC6CC6D716FD1093B3DBA39C2F175E42D35054A324F5ED3567B9F9A65CCC01071B50896E85C89148E8A8ADEBAE721F09FBF5D448A3911B5D4B777B299711AA688F996E47F02F16E7F417FFCA87ED61D61037C38AF05F8B7941DE36D4FD4E8831B6E46764FA05DC049F060B41AD4EF1011FB72F30F0D7ADBACC84638EB46CA472AB68B793C5F8F32839F04DBC1C9385A89D9529183DE6C2E16A0E37CF030C879177C032F3409CA3A928280EAE37BC0486514F69520612EFBC3EAB55C1FCA4DB1DABDCA976FA16361BA9F9C00102F13E292545EE38B125045082094BA24336BB31EF90FDC515B3C79DEF7C13D02BB513F84D481CF0DE354D7DDF3045105B249A0EE15604C10070B8A078E8A9F4CD86C76ACA2EF272648AC98E95332C1FCC3DB9697ADCCC80C17B7B009DD876EE4547D274848723659D8C90F3E1895CB2E508F5FAAE6CC105BCCF12CF0E846ED98A45F43C8DD08A7F855CAEFE639509743D03DF3F8072F639742CA175F8CAC4A88A48974B45C0D2640B45A3A2DC93A1E80D193DBCDA4B50A837089C47B69383B1E816A1C21E13C44942D23EC61793B2C9B7CF406810E146FBC51766A15F6D1BB1E08C79C31BCF6DE2C19C493360DB3BEF880D9DA46FF4A90FC4FC93E22D45B0ABD89205D78DE8897D88ED3FC91B511DCA9104FE3348A4974BE9876AA43768F8B8AC50B4542102C13B9514346137A7C46748EE6AE7EF29C15474A8A8B5B34D206E3D051742BCEA280F82C8DDC945734894CECDCE382767954697DB4DA4C93922C11A86DD7938395A67991D128061E94E9F21DA1290D8D3527835848FBD6FD2D98927239B9572B93D2E989859B4B1644BF45BD6814FDB6829A6F6C9B29A05E5511F88CD9D159224E118D104006D536E5DA4CA1124259B9473179B6190E452516B5F2B333C4DC4FE8CE5C734092DE8B07905FF2AFCF0FEAC8E67EECDBF8FDE5A9FF30B4DE62FDBDF01CD4C7567CB8DA34591DBCAF7E271D16849F7C77A59DDC5D5F066E5A9CA11999175BE060AAF2600736C6814C9D8B852B71042B76CCE5C234A6F66078E3F234F007E9EAFAFCD3C822879CB88BFB15194C9043944772FFEACCF5E8FB9666264526B1FAD60D6570FD33DC6DEBCF56E0C747FAF5A4D12A005A1BD8EE10C558130DB545F60724B9B82AB13213DFA84B1C2FCF2E77199F00D11268B6162DE34838D2D50D9AFBCBE10CA01EFABB9E31A39995311D465C3996640BF5B749E69A5CDF86EDD1D584832E2319F101BF9BDA18E5928035B4EE8D5809C59B2B000CBB90A3C1E7C2D1018601BF9F3867E34299E514B044678F04984B89D55B145DCD053CB354A2FC336F5F4376C447EB7169DCFC858392A2CCF7019F0CEC21CEAC836B97C2AD43270CADAA87666E12409C4A278E87864CD7C5967DCA88D02D6AB5E1C03877EAAD9BABD849B0537D0AA595D324E213BAD3701C877D7D558FF3CA95886B0E5804D91A11EA3A7BBC0215535E946F03FC30AA625B6A2FF15776FCF9743DA1E4371140C76E6EA4FCBE80BADAED9BDBF19712A64C95B0243C23FE516EF1A2F4C0680F453313E64099CD70C527D051BDE8449EFD7160D62672C80DE4030D27878FB56B77BCD7C9EA282BCB59FE76C9B13687162799CEA2E3BA50B0B01C56A208CA87E278124FEE91054B8E7C6959051E9B9EF85ED8754A27C203B9A1DC989F45080FDCBD6E521B5BA34B21240CC58433978F42D6760711EF8E37E4702CD44C78A9A140F8E84A1BB62858876B461C5CAC5D6AEE0ABECDB443861BAD0B0E1E02A5C4179D1FC32A7DE810E89B9EA004710101906BC8A4C0E12A6690DE6CA75241B2C7A14D1E91E15B5FC65C7563B0C30C05C7BEE838A5E715B95EF7C0CE40522B964D08B5AED81FE8ED87C6B9A51076748573325BDE78052747E871231900BED7BAAA8A45C96E4141B72E2D39D1A93FCC52483E36B4BB23A6B442C43CA157EDAD78A5E78E42BB0C0442FE9271F6997891BBA6F4E04F3DEDAF45661103C1A8C4F2954D56B0F04CDCA0FBCFAA2677F5E57A7882ED16BF214B37756261756EF2197D15EA417C1291372C8761DB52B723C574878B8F607966AB5AE5BC3220DFC48D0DA50951E91490A555EC8BB6FF3D78B4A9105EAED266D2601C858948F6A5F17D3948A60BCFA9254A3CA606CE2561167F33A57B98FFF732D546EBB68E03B85BE24C7E946674E99EB53FFD1ACF96FB2C88125B6777632560A49A5FEFBE14CABD37ACC99280D1D99EDB30E16EBE638EC09129BDFD9C31709B570D6E59ACB424071A0DD8C9A09824EAB30E59478559CA87FD6884AEDC36A48888A3896352AF2B98BC60C4661DE19AF04DDC49FF9E1F570C8801255FC48EE98B0D5529424BBA300FE981E3E6EFCC9EBDD66CBD1F52B9E84BE3359251F261D13093CDAC5E828B579B3822D040A05424EB6584EF3E802C72EA01A0C6147206E554BAD85C415B58116ECE8192FD25AEF3741AC0ECED83D1B76A6AD673349487C71C059FF8982146266E0D5AB3ED2D17A7CF0B5D28191A33E6274E2D11D00BE0DC68162A7E51329725DCCC6D1AFC9092B490B74F830BDBA96B6A0A6F5A6CAE2BE283FF3DADBB7A944A39C8734F14F7DDF4FFBAC5F261D8B015B06049211FEC835DC9CF53D63C8E391707493BC31D5842ADAB2F3589CF2BB87BA2C7A2B98C4FFA4B09B3708C1104A096004088E7314AA61EBB0BCD44B5FD19C9894F5CC918D03E4E735FE34FB7D8D2A33DFD6917D231989424EBF25CE99DD797A06CBB936F8F5E056F6F36D757708B4AA7F04E98BA91D4C08E941D7E88F8117F71511E37B3E79CD5A9970240D282D5525BDA0EC208B88D17D8604C501B0C101A3D861B5323F2249CF5F09CB5D2A15CE2C9C6EEB1FD33F263C71C5FAB8E692E6705F09A331B4F973AB41A3010B819514AD3DC4730FA528A18B974F6FD19A86F6DA108EAE4A2E0F9B69B40BF06C7B9104D3D4638F65AED47A63F2180CB376A20A41F700EE53719FA65CCFE28F20FE7E2A300A4DF09AB50A95C72AA2B88DFD92387CA5B3CB246125201E566426DF8321C365A5104F9ACA252B86A6E823C02BCF8A01E78BF5400969C845560A75EDDE2AF6991F8CFCF344963A17408C9326486AAADA3032E5226ABEE4A6EBBF9253E85FFC81907B8735A53CB165534560AA4E430F3DDC7FF70B81C9CDFA8696A748B09866E117BFD80785C476424BE510B862BE6D2E48F14E82504924BC9FCBC3F9A372E578C8C6140DDC2EF956C599BDC1D921A3EBA9E02AD7986F0BFBEF99AE5822E41E19AF944E43B17ECC9DE0734AA45ABF2DF6CE45CC825B5485B82EE39089F4972AEF9D6FCFAA8678386888994D0095FCDA05060396EA23D8A0D868158E86B31A80983AA6245CF3F90A6F18623A3EC4C460C6F62D18E83FE8786647458E6CDDD81985ED044AA8CDE28BD1B3635B019898E60F74711F7CFF2B084607ED8FEE937167C46A0C3A31EA35758844FE4C8F3D56394A36445D162848596E848D1333347C0271B5710A5585CE20287652FEBA6ADD38435386EE556F8A02BD74EA6F81FB719D4F96E38D53F3F26603C0C976320763D5DC9C8F1328D1074B0C2509052A8CBE1BBEC7CD5CFD1F55728B5C0998D0C452DC00D111EB02457653F21C4C6E9919DD6D6BCCF4D4C5388809CCC4650669B31A3024D71C7ECEBF357985ADBB30023BFA777FF0C0893622E546E65A6E28FBB01400DF6530BE5AE17846909D4B29F8001A31E7014C76F6C2038E282AD16B27BF0D36E55A3EBC6D4B30F825EFBA6A6ECB5F555D3CF26AEEABF349F63252EB2881503349ACAF92885B973B9853062F84994B5C75A00FFC021C3938F37E54B4450DCAC1DBDBA7C55072D6EF7875EAFF0C1C37FEA55A821C1CA118F0D942A8D1D8D6482356EF3B137551E33A56B46FCB0223DD21387D0DDC3AD6E0FE6F81EE9AE301AEAB3884F90A31EC1AD26F4CD33F5B16CD1678E3C977DF75F3CDBF10CBFB60A280C0790A587866D1837A5F8319B3F25BD659CA9E6202F6E5A380D27DC379C69062BD04E560D1A76ED80CFB44638C4B55538987871DEB7B808003D1866D92790D305B18044FB78F7BB3B07445E62655AA9C72DDD4AA90F6C59544376B9F8AA7566C7AEB6B86B9729B62B01D52C6FCD0A03E3DA023F5EC8A0576EF70A88F9421A873C8DD850F4326E0B087D07A804CDB2740BEA33382950B22352845BDA01811EA38009F26E97F09A7B59A573D5E3B7D9D2BD10968C23DE698809956E11C35A27300105D85F5C1A22A5B4C5113EF33220DAC51224AE3FC90C931FFD328179C011C40A8B5A0E48F2A6ACE26C786FAF0A88C8F816DCF05DA6220EBC166CC735B2D4ECBB0B038D910B5B3D4688FBA347901D956E84D62D49A7CEA246E04FFA23A20EECCE21C2B32CF72958F3B61FAB329F5A3682788BAC0D98801281C4E3AA13019CF23DF5178749AD8CFCB1023DC33C958506A7B291E72204FB3A53FEFABEA08040BA72D0FC75AEF5A3D1D3F7EC1F292D041E88B5567FD73BDD18D941724A9CDAB03EF14FFF3051037140E79165B7D3E9FCC69BECFC3D0EFB250EAA1341FB68C0D3A056F83FA9EB0D5603E4D213498221A410EA317D8DD9BB6D7A6DDF2C6113877D892AE413D7CF3294288E75C83225232A16EDAAD703B3A38107A7DDE6C2CA379CAEE8971B99BC3FB64EB8CA1FFE6324FF8208F51ED0A1B3C7CBC002661251F55F5814398DF968DCB21A6551B5EC8E144F9CC6FDC3CAEA947C716D2B7F4FE89939ED4F30D3A9E9B617BEA5E4301D99C2B3A134D7DC40B5E4681BEC3FA70A36E6F2E011C6A0F607EF852462D4672758DF50893E8F92C14CAE8B34B93E7D72820FE19CE4D96E34F7EA6B8E2FC95CD1DD607805EC2A7D660B0D6A6897D2D156151F0E4E8B89497C207A655517CBEACB1780DD652F6E1F3B5F28E60BC2159E4B2FA1833E26FCDECA0BAF5603839FC05DBB33E27B882495F265D2BEFEF936664D8E7D3759460F352E369FCFCD56241C9C5BA3C1040321745C183EDCCA234007EE4C9B9EA6D0BCD53679E57381F7420ACB51B0096E6B48C7C1384D27C57B8F1580900AA92EA7A672596F5504DF39471BBC7FAA7900BB2236B36367C2B5078F805A6800C7E3A04956E29A020DBC51640D01174181B45366DCBB5960F46A7147B6A9393A4A29392556CA0C90B1CA5C09AB1737117D55901149260C77A7D46AC7882B9CD51A1A412BCB62F36940FE4182A1FEB85423F6C3BF3426C6D8D2B310FB922EEBCCBA42C761FC62467463E1DF74859E76F34ABEF5977F73856E69D7BE949E9B5DD91F5AF7FEE52F2866C0F592E2C03805D78F751F6547CFD6FD106DD174B926BD77C87970B72741912EBC244B57C1D321BFFE30BD56905A5B5F8FB7DE0552ADA3E14BC8B13578836513705305A17249596B854433B2C290A7E0F62A4A1F81D5DB1951C8FD2543F8B49F1C3B117CC5D30CEBB2710659B4366D91DB06E7FF2A7D95FB42499700CF4B9F4372FCE5F2CEDBB27F40E3DD07813005B0787EA2ACE692653C134D981C8817FBC07C1E335198AC5CE77297105C5B16E2E1765E747335E6609D27F3A74BF7B5A6566D52BB65C90378917DF02945294ECD39B95669AB586D9459270A03EC5D66BE5A57F4AE8AB4E91DDDC809B06FDBB4EFED9C7FD8094AC3121072B828EE99C5068A7F219C5E017F53B3CCC408C7009B2B9C40932438DD91AB457FA12173F624BB97879BC9E82DB77412547FB453B4A8BAD89EE8C432E4391B947721410A154A6D6910E7F07DD2CAEE48453BE234EBEC0692717334F8E2D92514C90209D3A954AC933ACE10C864A88CF66E2BE3C798E148F0FC812316CE9554A06FDE1558B618B2CA949C5DAABF47CC86D84C8A094FFC5E3AEAADB53E53A9BE9CBB56D82FF3FBAD71906BB6E9B63917CB1C49C96AD34F5FEC77F4FEC7587B9FE59C914DE1D7BDCA6DA511921A382C3831ABC4B6BF5C7C787B5141D47BC588F889011D88C2078303906C14CB99FB91D26BEABF67D9BE38D85E3A35D27265EFB4BB4670013E4783C3E6010CBE145E0A51E53A89E56125C6CDBEE0CCDFF0C2EAE9F7750271505D2B08CD35DFFE70C0BC173669A29781E87F16402F6CB0F8E0596F26A888EC6B656A36F088DBD60B89E87880761DF70B10D945E73E59967D469237E7C31C798DC33BDDB0D6A338D5AE6420A0EA02B56A975F018366DC4FF1BAAB4805220B599F45989AE89805B626D097BDE6E34CD321E50CCE576E75ED7BE4819FDE825A74C209B167E8294E26E4AAF195FCA9C14153BB82BB0EEAED0C91E5E4F31FAD8552C4B0E4BDDF8AF55D43907F587F886C567E56AD721FD65E937CD8F982A1481AD5533A940C945080980AE578A39A539D2FA5C33613A3A567C25E24DAF5FE94DA41033798699F225AA4511F2A1EAC99052311C34E36F5F7DA4716A24CDF975CCFE7D56B93BE6D5B113675A884D1A1678A08DF11921B1AD0080E8696729B8236B2565C4E7674C93E6B5F4D3FC54C108C8ECE0787C531F5A0AF38B176546C3BABD1E819F1D7CBB03547A9D091863D19B6FE79B7B7839A59E6D8D49A104C62EB8C946DEF14E78FE6CBA7CC04488E99695041939FBCAC00BB07A2774A36A54499BC38F2CF209D4A876A845334337CE8FF77BE27B297ADCFCA538FF5D0193D5610DFB81DE5516047139B51ECA78872D5AC8458B5117C6E695B4D4F56AECFC978D95063DADF72B4FD9D7314BE9AF84A1E684F95F264046F27249DC1AE149F08D23D9F62D418C04C36B16FBFD8A69F6A2C2955CE34A120429BA548333F21BEDDF33F527C4585C1C074DDCDF7927E14529696EB84C542357D0B3FEDBEFA5CE10B3BC3ECB9569755636910F7C7AF7F4669E92BDCA5738D534D3CACFFFBA1A226F9D62B3585E5C999DDF5E2AF76EE9549A6A4B1F6749AA8DFEFE0BC2316B50C8D2E5A570C4730F28F2BB058B75A7D687A8C81EA844ABE1A7252D056253459EC5E0B0D01B39405625714531B024249EFB328C7B40DCA6305BA1D1165118934F9A49169209675F3C106FA55726800C904E8869B8DAE0957B294CE82AAE6051721A45F912EB5179D6A59A48AFB342B662C1A259CED0C31D849A9B5F44D5577EA6A031F605076A2D50183CBA67DE9223B06400FF2A8777FF2F42171D1FDDE90859067E78D5F58FAA29BE869421AC04E19F6A0A731C6626CF4FCD63C0C5386BC1645A02D85CFB787BD0FC87F87D5F41B37697B5E09EBD9E86E8909D17DB8C9B9EB21C1B1027182C5FEE2A682D23E9811E2DCE533621E21F77C0C11DDA2EC8734C1ED24C85A7F2EB7706145B4C262C5AAF2022697AC15CEFDC1384D51E7784DDB4CF2F114E9F9C77E3FA6030F27BC4C444092AE45ADD618134F99D52EC0F24FD285B62AB5E8A79C7C870E1E2FF689386207162AE147310FD8BEBE23D8C461219B6A374E1AEC6ED06BC9C6347C1E519F087C029B2F752533FEB847F1EE3C43F857DAA03DF1A0D00974781560DCBEA28801CF92A67EDF32B69190B0D07F478A7DC58A7CC9B673F168E421585FB3101504FF6FEFAB2F4AFFBD1DD80A083A932B79547D18D5E1231E2D1DC095D871E56388627924559677300855EC60E7FCEB62A62692415E16F626DBE3343D4163FFBE7106EEC8595B844DBC8FF40ED15A05F37205F0B4C856E0C825886EA96200D959AC3A19FA9D030BD09E21AA06AF1F90E5713D00D3763B39F4BA0EF96443B2BEAAE7EFDDF8773ABF811C20199BA033AB67E6AD7804C25749307DC0F3DE76190279BE9D4AB79F6A3BF2C528728E896712F703055898D7984AF4C9ED99ED89F79356EAC5F680485326F5FA45081C553186B92C7948F566D90C212CF47D8C305E283784B4A556B5BD35734EAB27117208228A7D1DDEDFF46F158819F1E13F1A87600067FEA6B5A36D400B59C50A95E07B14BB7AF9D3C25C233E75B644C5259815800E785A440294287B2B4E621B4085BCEFC07C87C4CABBCAE875024BA8B0EE1D5C42A8CD84566843EAAD9349EA89667CC9F6C385BD9EE970A2FA1D953D3EB6C039BF90076AC039F5814C5F6F16331A6C042F427FDD5B2AED520D2D96FD82F72EA3127EB164E830D9D94DE1B1100F0628FFF60402DDC331613A0A2AE842D7A0226B378853D52BE78FDE95F11BA1D46AE0A407D7EA2E2B54F66B45DCEAE45BE2E649D90180A85B627DC806BAD86957BB99B7D7EE53974DFBC99F804E6E5785ADF877F0F4D99F142CBBC4460A3871488D1B2A192F80F93235A177DE09F4A0CA8B8734D4FAF9F1F0808AAE86F46067AF35BF04853F3B7B21F108D1348F18D574997539D02FEE0E34DCE187A6FB2A724EEA51E4164E06E170271CCBD4067A38D1F818A0862273B58228C9A500B29AEA9D27A10294B7BD6825E0FE44298F02487EF8F0A6B840E4DE692D59BEE9935E4958370F45DDD5F2555F1A13F34DDDA919B6B1901FF9E608A36EB669D7CDFC9852D5B1AC36B6B70AEEFFF3595FFDB1EF84E0A080D8279DDF4897BEC7A64552B7D2E9F65A1898CB7089A9A3418EE39093CED3ACF5D91B942C941846EEF2BD2C95A8D135D7EF76B185E2C490AE04B6F0EAFE9D4B0D3A51DD182FA783D7BF4E401A4EBEC5B17B53CE8344C8DFE0F4B93684A36548EDDC9A54885E18AE0CBFC3B0528592F2F9FEDC163680DEE02F5EA06EBFB6D1D972DF1D1B30984804DE9C22FADEA583DFFD5672B39391337CE484D64513221B7892CADF01E425934FD59F71BC751B328EF38E2738C8BA4CB3F883079F3F547723EF7100782DDC1665DC195AD4C935A698D873857FECE45BFFEE26A9427814E0618B2090E97C22FB525F9CEC8E21CC82A6E42D764BC707579C4267CD1534096DFB6545C9EB28B9E8F9A043EE80BCBDF472516719D48C806958EFC69D561033DC5B639C4DE54680AA65F56F11BE58659665E718317B8CCB166C384F4833FB9816C45ED73D5B750993C56D0719CFB03353497BACECE0F9EDB8CB44AB8384BAD5566D5C2C8164F2CDB1919C1ED68F62C9C8EE653A25770F4CD9B808547DEBDAB4365E1A3D2AA83A74AA89FDFDEB98013124CE9B6A91736A78FE17B979547F823DA98A0D35BEE539A474D173F217491B22A2FF9CF739801300EF8745641708886ECAD501389C7571E43497CEA360774D77548D1E8B99CF017DEB5129CC26C7E52F3588F04A8F6E70FB862A75C4A01A1B7A9D1B3D8268347EC925950D64063E86045B5F34120923457A9BC1E3139B2323716363AA50C7724725A2E290D43986F81028680FD947E7F72673D9BF87199DFEE81C79CC6516584C990916FF588A9EF6EB9A556D105B2A72598DCB0A203FA381A7F39A590EE0686DB212D6306EFA3899F0FD5983287EC3571B971713A9A2F8C1D63AE4E528237E9D3A67B7403F330FF8F4D34B670D0F13514E4B42FEA196F03B768A480F5E9E5E587FFB4E6A080785411EF9E06DFF047B40DCAABA128E570491C7AB7FA2D95B7224D6122B197FF9CA362159F9D178966EBD636AD42816551AB2C2D71B1221F79D60377B93FC83819170F684762116477A4D39E165B365117F5C23AD5EA823E348CED5A1424E685614A12A335E835E2AFDB231A519D6073F808B271EF1C42B6477123533AD7B2DAFF9322ADEE2D6B10D41E62D510D492949DBF39314A4FE6D0C61193D2A32881196071B590E34DA5C093491C09C64308D0FF97F01B471A71666124F9F8094F3C8C363D2CB705DA493C3111A45984DD363AC593B3A33434FA2376210F0E7A394BA33CA47BEB46DB246F07AC51B5377F7705AAEF669331724F92F9318ECA29C9CCA7E3A086DE92419F549C98F0E02C7010FE5B2552653CA5306BDDDFA2856CCA1A032824510FE7ED9E906C684449629C2BC560DA486F7206B671B2068E0BFDFB3487446BBD160966EAEE055248C13389EF16111BE018DD931EC68C2C6FAAC19766D94BB6A0FF3096914B44C31A2D29B68D450C28F80FBB50E9BC402A60D0A60EDE4C5CD5579BB70F7FC9FA357AC35163F9E89A0401EE0DBB48FBEC98889896E19583459059FABBD5721768A54674F2BB9C72388F00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid3528 putdup 34 /gid1391 putdup 35 /gid1746 putdup 36 /gid2626 putdup 37 /gid5330 putdup 38 /gid4137 putdup 39 /gid2330 putdup 40 /gid1325 putdup 41 /gid1622 putdup 42 /gid2619 putdup 43 /gid4913 putdup 44 /gid7212 putdup 45 /gid3312 putdup 46 /gid5462 putdup 47 /gid5425 putdup 48 /gid2906 putdup 49 /gid7167 putdup 50 /gid2388 putdup 51 /gid3524 putdup 52 /gid3357 putdup 53 /gid1698 putdup 54 /gid7483 putdup 55 /gid1586 putdup 56 /gid7014 putdup 57 /gid6923 putdup 58 /gid2264 putdup 59 /gid3761 putdup 60 /gid6595 putdup 61 /gid2678 putdup 62 /gid4564 putdup 63 /gid4696 putreadonly def/$SubFontArray [/AAAAAI+PingFangHK-Regular findfont ] def/CharProcs 33 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid1325 {(\001) 0 $SP} putdup /gid1391 {(\002) 0 $SP} putdup /gid1586 {(\003) 0 $SP} putdup /gid1622 {(\004) 0 $SP} putdup /gid1698 {(\005) 0 $SP} putdup /gid1746 {(\006) 0 $SP} putdup /gid2264 {(\007) 0 $SP} putdup /gid2330 {(\010) 0 $SP} putdup /gid2388 {(\011) 0 $SP} putdup /gid2619 {(\012) 0 $SP} putdup /gid2626 {(\013) 0 $SP} putdup /gid2678 {(\014) 0 $SP} putdup /gid2906 {(\015) 0 $SP} putdup /gid3312 {(\016) 0 $SP} putdup /gid3357 {(\017) 0 $SP} putdup /gid3524 {(\020) 0 $SP} putdup /gid3528 {(\021) 0 $SP} putdup /gid3761 {(\022) 0 $SP} putdup /gid4137 {(\023) 0 $SP} putdup /gid4564 {(\024) 0 $SP} putdup /gid4696 {(\025) 0 $SP} putdup /gid4913 {(\026) 0 $SP} putdup /gid5330 {(\027) 0 $SP} putdup /gid5425 {(\030) 0 $SP} putdup /gid5462 {(\031) 0 $SP} putdup /gid6595 {(\032) 0 $SP} putdup /gid6923 {(\033) 0 $SP} putdup /gid7014 {(\034) 0 $SP} putdup /gid7167 {(\035) 0 $SP} putdup /gid7212 {(\036) 0 $SP} putdup /gid7483 {(\037) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F1.1/PingFangSC-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/space 1 def
/uni2B91 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9301CB16965794C1772CA14F06910BCAE9D9B0B498A8D671A1AA6B0B8D5582332A92D84857DD5C3D74FC2BB42498CF56F31A20997F10CA724E3D0BA7FB6AD95276AB471CF50578C8FAFB72BFF3B053B961686E736726F7555E276B001CF72A6653F3E292928316D982E45127D9C7309C775A44562DFA6C640EC332BC00E13A41BF0C88A61043740A923D97A9916C84C10D9DD6CB00BA963C493FB1EC9786C39CE3FA7CD8539C4DE085D500A8F195ACCCBFA003218E355589B1C4B4821D870A42F3E97D50AB6EAE8C9AB8D837A3E989FD99B374A4930D2ECB16A3966361964343A0B0ACE1AAD6854773C1600D411CFE9C49A587E01CB6599DD1C0B8ABC83DEDDA0C4ECABA6C404BBA756A7EEC6AC8053FD25FFF91671FF50AFD48F9CCAA3B81CD245E5681BCDA3FD23C84792BF2D233CF9E09E03BFA16
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 776 340 rc
133 295.64349 m
133 298.95905 132.619 299.36926 129.83591 302.65051 c
129.8065 302.68445 l
127.0087 306 126.9796 306 124.1083 306 c
120.2851 306 103 306 103 306 c
103 271 l
133 271 l
133 295.64349 l
h
133 295.64349 m
f
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 14 218 cm
119 -77.643501 m
119 -80.959053 118.619 -81.369247 115.8359 -84.650497 c
115.8065 -84.684448 l
113.0087 -88 112.9796 -88 110.1083 -88 c
106.2851 -88 89 -88 89 -88 c
89 -53 l
119 -53 l
119 -77.643501 l
h
119 -77.814301 m
119 -80.959053 118.9706 -80.959053 112.9796 -80.959053 c
112.9796 -80.959053 l
112.9796 -87.965698 112.9796 -88 110.2841 -88 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 118 322.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16 6 m
(!")[ 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 14 218 cm
149 24 m
179 24 l
179 54 l
149 54 l
h
149 24 m
S
109 24 m
139 24 l
139 54 l
109 54 l
h
109 24 m
S
69 24 m
99 24 l
99 54 l
69 54 l
h
69 24 m
S
29 24 m
59 24 l
59 54 l
29 54 l
h
29 24 m
S
-11 24 m
19 24 l
19 54 l
-11 54 l
h
-11 24 m
S
189 24 m
219 24 l
219 54 l
189 54 l
h
189 24 m
S
4 w
249 210 m
249.30748 10 l
249.30748 10 l
S
1 w
209.99342 -7.5721827 m
245.73775 9 l
257.45917 -7.3032532 l
302 -7.3032532 l
324 -7.3032532 335 -7.3032532 348.20001 -9.5771875 c
359.20001 -11.851123 370.20001 -17.535961 374.60001 -23.220798 c
379 -30.042603 379 -35.72744 379 -47.097115 c
379 -81.206139 l
379 -92.575813 379 -98.260651 374.60001 -105.08246 c
370.20001 -110.7673 359.20001 -116.45213 348.20001 -118.72607 c
335 -121 324 -121 302 -121 c
236 -121 l
214 -121 203 -121 189.8 -118.72607 c
178.8 -116.45213 167.8 -110.7673 163.39999 -105.08246 c
159 -98.260651 159 -92.575813 159 -81.206139 c
159 -47.097115 l
159 -35.72744 159 -30.042603 163.39999 -23.220798 c
167.8 -17.535961 178.8 -11.851123 189.8 -9.5771875 c
196.52071 -8.419426 202.67113 -7.8511324 209.99342 -7.5721822 c
h
209.99342 -7.5721827 m
S
0 i
0.2 0.2 0.2 sc
CM
353.5 278 m
383.5 278 l
383.5 248 l
353.5 248 l
h
353.5 278 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
339.5 -60 m
369.5 -60 l
369.5 -30 l
339.5 -30 l
h
339.5 -60 m
S
169.5 -60 m
199.5 -60 l
199.5 -30 l
169.5 -30 l
h
169.5 -60 m
S
265 -70 m
280 -70 l
285 -70 287.5 -70 290.5 -69 c
293 -68 295.5 -65.5 296.5 -63 c
297.5 -60 297.5 -57.5 297.5 -52.5 c
297.5 -37.5 l
297.5 -32.5 297.5 -30 296.5 -27 c
295.5 -24.5 293 -22 290.5 -21 c
287.5 -20 285 -20 280 -20 c
265 -20 l
260 -20 257.5 -20 254.5 -21 c
252 -22 249.5 -24.5 248.5 -27 c
247.5 -30 247.5 -32.5 247.5 -37.5 c
247.5 -52.5 l
247.5 -57.5 247.5 -60 248.5 -63 c
249.5 -65.5 252 -68 254.5 -69 c
257.5 -70 260 -70 265 -70 c
265 -70 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 286.5 263 cm
-16 -5 m
(#$)[ 16.000000 0.000000 ] xS
-16 17 m
(%&)[ 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 14 218 cm
200 -45.000015 m
237.10001 -45.000015 l
S
0 i
CM
259.10001 263.00003 m
251.10001 266.00003 l
251.10001 260.00003 l
h
259.10001 263.00003 m
f
0 J
0 j
1 0 0 -1 14 218 cm
245.10001 -45.000015 m
237.10001 -48.000015 l
237.10001 -42.000015 l
h
245.10001 -45.000015 m
S
1 J
1 j
0.60000002 i
298 -45.000008 m
329.10001 -45.000008 l
S
0 i
CM
351.10001 263 m
343.10001 266 l
343.10001 260 l
h
351.10001 263 m
f
0 J
0 j
1 0 0 -1 14 218 cm
337.10001 -45.000008 m
329.10001 -48.000008 l
329.10001 -42.000008 l
h
337.10001 -45.000008 m
S
1 J
1 j
0.60000002 i
189.5 -60 m
189.80748 -90 l
189.80748 -90 l
S
189.5 -90 m
274.5 -89.69252 l
274.5 -89.69252 l
S
274.65219 -79.898827 m
274.8075 -90 l
274.8075 -90 l
S
0 i
CM
288.52921 289.89978 m
291.65182 297.85272 l
285.65253 297.94495 l
h
288.52921 289.89978 m
f
0 J
0 j
1 0 0 -1 14 218 cm
274.52921 -71.899773 m
277.65182 -79.852715 l
271.65253 -79.944946 l
h
274.52921 -71.899773 m
S
/Cs3 SC
0 sc
1 0 0 -1 246 319.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-58.223999 6 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-53.776001 6 m
('\(\)*+$,)[ 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
CM
542.5 58.356499 m
542.5 55.040951 542.11902 54.630749 539.33588 51.349499 c
539.30652 51.315552 l
536.50873 48 536.47961 48 533.60828 48 c
529.7851 48 512.5 48 512.5 48 c
512.5 83 l
542.5 83 l
542.5 58.356499 l
h
542.5 58.356499 m
f
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 14 218 cm
528.5 159.64349 m
528.5 162.95905 528.11902 163.36925 525.33588 166.6505 c
525.30652 166.68445 l
522.50873 170 522.47961 170 519.60828 170 c
515.7851 170 498.5 170 498.5 170 c
498.5 135 l
528.5 135 l
528.5 159.64349 l
h
528.5 159.8143 m
528.5 162.95905 528.47058 162.95905 522.47961 162.95905 c
522.47961 162.95905 l
522.47961 169.9657 522.47961 170 519.78412 170 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 563.5 65.5 cm
-16 -5 m
(-.)[ 16.000000 0.000000 ] xS
-16 17 m
(/0)[ 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 14 218 cm
498.5 9 m
528.5 9 l
538.5 9 543.5 9 549.5 10.2 c
554.5 11.4 559.5 14.4 561.5 17.4 c
563.5 21 563.5 24 563.5 30 c
563.5 48 l
563.5 54 563.5 57 561.5 60.599998 c
559.5 63.599998 554.5 66.599998 549.5 67.800003 c
543.5 69 538.5 69 528.5 69 c
498.5 69 l
488.5 69 483.5 69 477.5 67.800003 c
472.5 66.599998 467.5 63.599998 465.5 60.599998 c
463.5 57 463.5 54 463.5 48 c
463.5 30 l
463.5 24 463.5 21 465.5 17.4 c
467.5 14.4 472.5 11.4 477.5 10.2 c
483.5 9 488.5 9 498.5 9 c
498.5 9 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 527.5 179 cm
-32 -5 m
(1234)[ 16.000000 16.000000 16.000000 0.000000 ] xS
-16 17 m
(56)[ 16.000000 0.000000 ] xS
/Cs1 SC
0.2 0.2 0.2 sc
CM
294 194 m
324 194 l
324 164 l
294 164 l
h
294 194 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
280 24 m
310 24 l
310 54 l
280 54 l
h
280 24 m
S
0 i
0.2 0.2 0.2 sc
CM
334 194 m
364 194 l
364 164 l
334 164 l
h
334 194 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
320 24 m
350 24 l
350 54 l
320 54 l
h
320 24 m
S
0 i
0.2 0.2 0.2 sc
CM
374 194 m
404 194 l
404 164 l
374 164 l
h
374 194 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
360 24 m
390 24 l
390 54 l
360 54 l
h
360 24 m
S
0 i
0.2 0.2 0.2 sc
CM
414 194 m
444 194 l
444 164 l
414 164 l
h
414 194 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
400 24 m
430 24 l
430 54 l
400 54 l
h
400 24 m
S
597 63 m
597 15 l
597 11.688 632.84003 9 677 9 c
721.15997 9 757 11.688 757 15 c
757 63 l
757 66.311996 721.15997 69 677 69 c
632.84003 69 597 66.311996 597 63 c
597 15 m
597 18.312 632.84003 21 677 21 c
721.15997 21 757 18.312 757 15 c
S
0 i
0.2 0.2 0.2 sc
CM
616 189 m
646 189 l
646 159 l
616 159 l
h
616 189 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
602 29 m
632 29 l
632 59 l
602 59 l
h
602 29 m
S
0 i
0.2 0.2 0.2 sc
CM
656 189 m
686 189 l
686 159 l
656 159 l
h
656 189 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
642 29 m
672 29 l
672 59 l
642 59 l
h
642 29 m
S
0 i
0.2 0.2 0.2 sc
CM
696 189 m
726 189 l
726 159 l
696 159 l
h
696 189 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
682 29 m
712 29 l
712 59 l
682 59 l
h
682 29 m
S
0 i
0.2 0.2 0.2 sc
CM
736 189 m
766 189 l
766 159 l
736 159 l
h
736 189 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
722 29 m
752 29 l
752 59 l
722 59 l
h
722 29 m
S
0 i
0.40000001 0.40000001 0.40000001 sc
CM
659 94.813652 m
659 91.558388 658.59363 91.155647 655.62494 87.934052 c
655.59363 87.900719 l
652.60925 84.645454 652.57825 84.645454 649.5155 84.645454 c
645.43744 84.645454 627 84.645454 627 84.645454 c
627 119.00909 l
659 119.00909 l
659 94.813652 l
h
659 94.813652 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 14 218 cm
645 123.18635 m
645 126.44161 644.59363 126.84435 641.62494 130.06595 c
641.59363 130.09927 l
638.60925 133.35454 638.57825 133.35454 635.5155 133.35454 c
631.43744 133.35454 613 133.35454 613 133.35454 c
613 98.990906 l
645 98.990906 l
645 123.18635 l
h
645 123.35404 m
645 126.44161 644.96863 126.44161 638.57825 126.44161 c
638.57825 126.44161 l
638.57825 133.32086 638.57825 133.35454 635.70306 133.35454 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 707 102.80909 cm
-40 6 m
($,734)[ 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
32 0 0 36 102 268 cm
save
288 12 cg_miaiproc 
72 -36 -36{
gsave 1 96 div 1 108 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
96 37 scale
BI
/Width 96
/Height 37
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 36 m 0 0 l 96 0 l 96 36 l h W n EOD
JcC<$ec5:Brr;tIqZ-VFJcEgkmf38/qZ-WLrr;tAp]1;QgAggGrr;tIqZ-VFJcGBB_Z0ToqZ-W3qu?Y#
qZ-Tsrik5Yo`5!grdFYDrdUU@QN-qTqZ-W'qu?Zkr]U,YrX/YKi;`HMrq$,7qZ-VFbl<7olMpiZqZ-Vq
q#C?[rZq@@rYkdsj8\cPrpTi1qZ-VFq#>pF^An15qZ-Vjp&G$ErY#).r\FKGmf3+_o`5![rce5>rdTM!
[K$52qZ-Vfr;ZNkrkJF9qZ-Unrr20^o`5![rce5>rdTM!d/W8.raYg*rgN<UrgWZ_rd!c.o`5![rce5>
rdTM!r;XA.rb20/rg3!Orc7c6rh\u]o`5![rce5>rdUmHNrT)nqZ-V\m/R(`r_31hrX&SMn,N%\rpTi1
qZ-VFeGk+"irB!oqZ-VZl2UbRr[I^ErZM4,o)J@_rpTi1qZ-VF!<7WM[f?>DqZ-VXk5YG6rX\l+!DlSm
;"FYZ!<2HdGP_C>It@X-s8Hp5!</,@s8K>!!</V`s7HBkn,@P.!<.J!s4IA.s8Hs6!</)<s8Hg2!<*W1
n+cqU!<2HdGP_C>It[j-s8Hs6!<-4%U].+hVZ*OnXo>g/_>_[Xf)G.;s8M`k,PqK?GPM42!<2HdGP_C>
J$As-s8Hrj!<*Q/1B&Wt!<*`4rVQWf!<2HdGP_C>J)('Ts4[MPR)f:,`;BT-!<2HdG6%[Dr;chHJcE.X
rqHDQra>V1ra,S/r`T5$r_NM_r]U6<rZD+Bnc8Z3qu?<hrpTi1qZ-VFJcE+Wf`1sKrnIF0rYGA2r[7UA
o`5![rce5>rdTM!i;]SPrn%,MqZ-WOrqc9frpTi1qZ-VFN;nJ/o`+nJqZ-W0rqQ-drpTi1qZ-VF\Gq-[
aT)6;qZ-Vdrq#d_rpTi1qZ-VFjSsf2SH&S%qZ-VHroWkRrpTi1qZ-VFJcCi3nGiK.qZ-V@ro*MMrpTi1
qZ-VFJcEC_`;fg\qZ-V;ro!GLrpTi1qZ-VFJcFs6R/d/5qZ-V8ro!GLrpTi1qZ-VFPlH=7m/R'7qZ-V6
rnmAKrpTi1qZ-VF_#Juc_#OC`qZ-V6rnmAKrpTi1qZ-VFm/MY:PlL`4qZ-V6rnmYSq#LE_rce5>rdTM!
R/cCMrdXeFrbqeno`5![rce5>rdTM!`;dLMrdXeFrbqeno`5![rce5>rdTM!nGeUMrdXeFrbqeno`5![
rce5>rdUI<JcFg2rdXeFrbqeno`5![rce5>rdW#hJcE7[rdXeFrbqeno`5![rce5>rdXS?JcC]/rdXeF
!H2lVDuSYe!<2HdGP_C>It@Wms5<qVJ,96FDuSYe!<2HdGP_C>It@XDs0Vh*J,96FDuSXE
~> 0 37 m 0 0 l 96 0 l 96 37 l h W n EOD
o`5![rce5>rdTM!SH%[MrdXeFrbqeno`5![rce5>rdTM!aT&dMrdXeFrbqeno`5![rce5>rdTM!o`'mM
rdXeFrbqeno`5![rce5>rdUU@JcF[.rdXeFrbqeno`5![rce5>rdW/lJcE+WrdXeFrbqeno`5![rce5>
rdX_CJcCQ+rdXkH!<<-!DuSYe!<2HdGP_C>It@Wqs4mYRJ,96FDuSYe!<2HdGP_C>It@XHs02P&J,96F
DuSYe!<2HdGP_C>It@Xts+LFOJ,96FDuSYe!<2HdGP_C>J#NBus4IANJ,96FDuSYe!<2HdGP_C>J(4LL
s/c8"J,96FDuSYe!<2HdGP_C>IfTM"s+11Ms8INF!<-p9ht7!Kn,@P.!<.J!s/c7Ms8INF!<-p9ht7!K
n,@P.!<.J!s4I@Ms8INF!<-p9ht7!Kn,@P.!<.J$s+14Js8INF!<-p9ht7!Kn,@P.!<.JPs+13ss8INF
!<-p9ht7!Kn,@P.!<.K's+13Gs8INF!<-p9ht7!Kn,@M3!!)rtrdTM!M#[8MrdXeFrbqeno`5![rce5>
rdTM![/\AMrdXeFrbqeno`5![rce5>rdTM!i;]JMrdXeFrbqeno`5![rce5>rdTn,JcGBBrdXeFrbqen
o`5![rce5>rdVHXJcEgkrdXeFrbqeno`5![rce5>rdX#/JcD8?rdXeFrbqeno`5![rce5>rdTM!OT4hM
rdXeFrbqeno`5![rce5>rdTM!]`5qMrdXeFrbqeno`5![rce5>rdTM!kl7%MrdXeFrbqeno`5![rce5>
rdU14JcG*:rdXeFrbqeno`5![rce5>rdV``JcEOcrdXeFrbqeno`5![rce5>rdX;7JcCu7rdXeFrbqen
r;cWnrpTi1qZ-VFJcD,;kl:X3qZ-V6rnmAKrpTi1qZ-VFJcE[g]`7t\qZ-V6rnmAKrpTi1qZ-VFJcG6>
OT5<0qZ-V6rnmAKrpTi1qZ-VFSH"0?jT#4/qZ-V6rnmAKrpTi1qZ-VFaT$hk\GuPXqZ-V6rnmAKrpTi1
qZ-VFo`'LBN;rm,qZ$Y8DZF_Tht7!Kn,@P.!<.J!s.KDMs8INF!<-p9ht7!Kn,@P.!<.J!s31MMs8INF
!<-p9hgb
~> 0 37 m 0 0 l 96 0 l 96 37 l h W n EOD
o`5![rce5>rdTM!SH%[MrdXeFrbqeno`5![rce5>rdTM!aT&dMrdXeFrbqeno`5![rce5>rdTM!o`'mM
rdXeFrbqeno`5![rce5>rdUU@JcF[.rdXeFrbqeno`5![rce5>rdW/lJcE+WrdXeFrbqeno`5![rce5>
rdX_CJcCQ+rdXkH!<<-!DuSYe!<2HdGP_C>It@Wqs4mYRJ,96FDuSYe!<2HdGP_C>It@XHs02P&J,96F
DuSYe!<2HdGP_C>It@Xts+LFOJ,96FDuSYe!<2HdGP_C>J#NBus4IANJ,96FDuSYe!<2HdGP_C>J(4LL
s/c8"J,96FDuSYe!<2HdGP_C>IfTM"s+11Ms8INF!<-p9ht7!Kn,@P.!<.J!s/c7Ms8INF!<-p9ht7!K
n,@P.!<.J!s4I@Ms8INF!<-p9ht7!Kn,@P.!<.J$s+14Js8INF!<-p9ht7!Kn,@P.!<.JPs+13ss8INF
!<-p9ht7!Kn,@P.!<.K's+13Gs8INF!<-p9ht7!Kn,@M3!!)rtrdTM!M#[8MrdXeFrbqeno`5![rce5>
rdTM![/\AMrdXeFrbqeno`5![rce5>rdTM!i;]JMrdXeFrbqeno`5![rce5>rdTn,JcGBBrdXeFrbqen
o`5![rce5>rdVHXJcEgkrdXeFrbqeno`5![rce5>rdX#/JcD8?rdXeFrbqeno`5![rce5>rdTM!OT4hM
rdXeFrbqeno`5![rce5>rdTM!]`5qMrdXeFrbqeno`5![rce5>rdTM!kl7%MrdXeFrbqeno`5![rce5>
r]cWsJUd$9r]g8[rbqeno`5![rcbgOJH3.Zrbqeno`5![ri+oXJH1T.rgs,Hr;cWnrpTjSri#g9JT$fl
ic"gfrndY3o`4mXrpB^FJ`"<$Xl&dOqsXOOro8RemGEKPo`4mXrpB^FRGWSQe_g$"qsXOOro:uTJ`!Ha
o`4mXrpB^Fn_\oTJ`$F`o`4mXrpB^FJ`!$UdGOTsqsXOOro8ReakrrPJ,
~> 0 37 m 0 36 l 96 36 l 96 37 l h W n EOD
o`4mXrpB^FJ_umQe_brXXoEtPJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcDSHJ,
~> restore
33 0 0 36 626 82 cm
save
297 13 cg_miaiproc 
72 -36 -36{
gsave 1 99 div 1 108 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
99 37 scale
BI
/Width 99
/Height 37
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 36 m 0 0 l 99 0 l 99 36 l h W n EOD
JcC<$bQ%27rr;tIqZ-UXJU,^iRsFuqnGrRgrdXeFr]H$_JU-@&r]K]Nrr;tIqZ-UX^NkBUYBg+0nGrRW
rce5>r]Kk!JU)flq0Ds%nGrRWrce5>r]GaWX*MU.r]K]NrpTi1qZ-UXJU-4"NHtLcnGrRWrce5>r]HNm
JU,jmr]K]NrpTi1qZ-UXc$=kcTm?W"nGrRWrce5>!'C9E4Fqd1H0]bT4RiFNn,@P.!<,*3H+A4.H2]qr
!<2HdGP_C>4FqeHH%C5AH$TBOnGrRWrce5>r]I$&JU,@_r]K]NrpTi1qZ-UXgNe?qPBm-inc/XirpTi1
qZ-UXJU*B'h0Ju^nGrRWrce5>r]GaWa*FS.r]K]NrpTi1qZ-UXJU.3>JU-d2r]K]NrpTi1qZ-UXZ[%+I
]6XB<nGrRWrce5>r]KFjJU)rpr]C/\nc8[Xrce5>r]GaWT6\b.r]K]NrpTi1qZ-UXJU,dkR<econGrRW
rce5>r]H*aJU-:$r]K]NrpTi1qZ-UX_0LTWXa0n.nGrRWrce5>r]Kq#JU)flpNca#nGrRWrce5>r]GaW
Xa.a.r]K]NrpTi1qZ-UXJU-:$Mg>:anGrRWrce5>r]HToJU,dkr]K]NrpTi1qZ-UXcZt(eT6^DunGrRW
rce8?!!*!\JU)rpl$<7jnGrRWrce5>r]GaW]6U`.r]K]NrpTi1qZ-UXJU-d2JU.3>r]K]NrpTi1qZ-UX
Vg3i=a*IYHnGrRWrce5>r]K"^JU*B'r]KfQrW)rdrce5>r]GaWPBko.r]K]NrpTi1qZ-UXJU,@_V0W&&
nGrRWrce5>r]GaW!I8sAH1-%X4RiFNn,@P.!<,*gH%C7OH2]r*!.Y
~> 0 37 m 0 0 l 99 0 l 99 37 l h W n EOD
oDnmZrce5>r]GaWSU&V.r]K]NrpTi1qZ-UXJU,^iRsFuqnGrRWrce5>r]H$_JU-@&r]K]NrpTi1qZ-UX
^NkBUYBg+0nGrRWrce5>r]Kk!JU)flq0Ds%nGrRWrce5>r]GaWX*MU.r]K]NrpTi1qZ-UXJU-4"NHtLc
nGrRWrce5>r]HNmJU,jmr]K]NrpTi1qZ-UXc$=kcTm?W"nGrRWrce5>!'C9E4Fqd1H0]bT4RiFNn,@P.
!<,*3H+A4.H2]qr!<2HdGP_C>4FqeHH%C5AH$TBOnGrRWrce5>r]I$&JU,@_r]K]NrpTi1qZ-UXgNe?q
PBm-inc/XirpTi1qZ-UXJU*B'h0Ju^nGrRWrce5>r]GaWa*FS.r]K]NrpTi1qZ-UXJU.3>JU-d2r]K]N
rpTi1qZ-UXZ[%+I]6XB<nGrRWrce5>r]KFjJU)rpr]C/\nc8[Xrce5>r]GaWT6\b.r]K]NrpTi1qZ-UX
JU,dkR<econGrRWrce5>r]H*aJU-:$r]K]NrpTi1qZ-UX_0LTWXa0n.nGrRWrce5>r]Kq#JU)flpNca#
nGrRWrce5>r]GaWXa.a.r]K]NrpTi1qZ-UXJU-:$Mg>:anGrRWrce5>r]HToJU,dkr]K]NrpTi1qZ-UX
cZt(eT6^DunGrRWrce8?!!*!\JU)rpl$<7jnGrRWrce5>r]GaW]6U`.r]K]NrpTi1qZ-UXJU-d2JU.3>
r]K]NrpTi1qZ-UXVg3i=a*IYHnGrRWrce5>r]K"^JU*B'r]KfQrW)rdrce5>r]GaWPBko.r]K]NrpTi1
qZ-UXJU,@_V0W&&nGrRWrce5>r]GaW!I8sAH1-%X3Um+Kn,@P.!<,*gH%C7OH2]c%!.Y
~> 0 37 m 0 0 l 99 0 l 99 37 l h W n EOD
oDnmZrce5>r]GaWSU&V.r\s?IrpTi1qZ-UXJU,^iRsFuinGrRWrce5>r]H$_JU-@&r[[L=rpTi1qZ-UX
^NkBUYBg*hnGrRWrce5>r]Kk!JU)flr-A9arX&)prpTi1qZ-UXJU+;Aaa*l(r[[C:rpTi1qZ-UXJU-4"
_g26"ojdu1ra>_4ra#M+r`/qpr_3;Vr\FHorW2<brpTi1qZ-UXQ[+[<r_*4l])_j!rce5>r]JGNJU,sp
rZ9,\rXJK"rpTi1qZ$UY!B`JqH)>ld)uBX7&cNRF(]G9N)?(QR*r[Ab-RSmAr[e%(r]pHYr`oF8qZ-Up
oDnmZrce5>r]GaW\U!UgrYt_7ra"?*r]9oVrWiG?oDnmZrce5>r]GaWms2EgrYt_7ra+N.r`8dorc\:u
oDnmZrce5>r]I$&JpI>7qZ-V%j*CW6rW`6"r]L29rnm>JrpTi1qZ-UXgNe?qb^'1,qZ-V&k'?rBrXJ`)
rYkdZqqq&H!!*#erce5>r]GaWVKr.[qZ-V'pj)FUrc7uRqZ-U)rj_a\oDnmZrce5>r]GaWa*HTgrYt_7
raG/=rcS2\qZ-TurhK/DoDnmZrce5>r]GaWrHYDgrYbS5rakPDrce>gp]1;Qqr%8=oDnmZrce5>r]IN4
JU-m5rYPG3rb1bGr\+$Hrd":sq!dnUrpTi1qZ-UXl$7i*^3T\mqZ-V3np13pp]1;*rnmM/qX=OTnFQ_[
n,@P.!<,*3H)>ld'E%n3!!*";om-O'p]1:lrnm_5q!7_ToDnmZrce5>r]GaWeToSgrXJ`)rcIp\r^uqc
r^?b@qr%88q#BsdrpTi1qZ-UXMg:h<rWW9$rWN"Ar_i^rqZ-USrn.#(q!7_ToDnmZrce5>r]J#BJU-L*
rc\/=rXo$Qr`/q!qZ-UHrmUl)puV;Mq#BsdrpTi1qZ-UXpN_=8Z[)O`qZ-U:rd"KErWE#trZ_?dqr%82
!WN)prqQNc!<2HdGP_C>4Fqd[H2W$f:AY%j/,iHG"8`)t*WF(Ri:uF/rqQNc!<2HdGP_C>4Fqe<H,k40
/GfGH(\e"0*<*tWi:u=,rU9dY!<2HdGP_C>4ILJZH2^k5!<+)>`;AKfiqWK@s7?<jn,@P.!<+1g7"Ibn
7/fOP62j.K2Z=fe!<+hScM6>miqWK@s7?<jn,@P/!.b-?!<*-#D>r5]hu!?Nr9"%O!<2HdUO`EN!:0^b
/,j_k_scLXr9"%O!<2HdmJ`N)@I%@F@K'd9B)ZNDDuP7cOT*&Xht[-3s7?<dn"JWihtQ%'jS8`1s7?<d
n(6HJhne4FjS8`1s7ZNm!;Q#6hj<6qj8f2Trn[VH!;QEchgse2iq_TrhtZ[8rm^u?!;QEchh'k*io].n
n+cn3s7?<dqY8sXif2s[htZ[8rm^su
~> 0 37 m 0 36 l 99 36 l 99 37 l h W n EOD
oDn[_ptpY^`8]q:q!\"WJcCW-JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcE(V
J,
~> restore
31 0 0 4 512 77 cm
save
279 12 cg_miaiproc 
0 1 0 {
gsave 1 93 div 1 12 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
93 12 scale
BI
/Width 93
/Height 12
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 12 m 0 0 l 93 0 l 93 12 l h W n EOD
li;T^Q?hY=irFXU\Tu,=irFXUgj,T=irFXU!I8sAH2`*L!2=aiH/!W)!6'57H+8.[!9e]ZH'N[B!;?JE
H&Ht=H/emUH*2G=H/emUH-po=H/emUH1ZB=H/emkH%C8'H2%Ai
~> restore
33 0 0 32 626 45 cm
save
297 13 cg_miaiproc 
48 -48 -48{
gsave 1 99 div 1 96 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
99 49 scale
BI
/Width 99
/Height 49
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 48 m 0 0 l 99 0 l 99 48 l h W n EOD
JcC<$bQ%27q#>p>c1dLtoDn[dKD0rkhtQaCq#@o!JbQ/<oDn[Xpttl*J`21=r8IG.oDn[XptpY]Y2RCZ
ptt]Dq"+:<J`5\KOQ#uloDn[TOl(`IdGOQrq!Z8\J_usSoDn[TrSN1`J`#SHoDn[TJ`!fkYM\sPq!Wdk
l/.'Lq;:fEq!Xj4J`"B&oDn[Te_br8NSjC/!!)f_J_uCCfAH3#q!Wdk_;CsDoDn[TJ`$4ZJ`#eNoDn[T
Xl"]e[GUTVq![8#J_u%9!T2f,!;Q#6hjNBDht-pDmt'BBhilsi!;Q#:hgs\@ht-pDn%7J.hl#B(!;Q$Q
hgs[9hsoUr!;Q#6hl#ADht-pDmt'BPhhBt[!;Q#Hhgs\2ht-pDn&aI<hjNBo!;Q!`hqs"BJ`#MFoDn[T
J`!lmXl&aNq!Wdkled9NpYYTCq!Xp6J`"<$oDn[TfAD/:Mr47/rW)`^J_uIEe_g!!q!Wdk_r%*DoDn[T
J`$:\J`#_LoDn[TYMXogZetBTq![>%J_u%9rSR5Iq!WdkS);9DoDn[TJ`"l4Ol,d2q!X!qJ`#5>oDn[T
^#+CuV;LnFq![h3J_u%9n)*a;q!WdkWSb8DoDn[TJ`#ABKAZ;$q!XL*J`"`0oDn[TbMRm.Qf%E8q!Wdk
J`#GDoDn[TJ`!roX5AF
~> 0 49 m 0 0 l 99 0 l 99 49 l h W n EOD
oDn[TJ_ugObMVplq!Wdkc/4fDoDn[TKAV7;hr"&+q!YcNJ`!HaoDn[Tn)&]RJ`$(VoDn[TJ`!<]^#/G^
q!WdkgY[eDoDn[TOl(`IdGOQrq!Z8\J_usSoDn[TrSN1`J`#SHoDn[TJ`!fkYM\sPq!Wdkl/.'Lq;:fE
q!Xj4J`"B&oDn[Te_br8NSjC/!!)f_J_uCCfAH3#q!Wdk_;CsDoDn[TJ`$4ZJ`#eNoDn[TXl"]e[GUTV
q![8#J_u%9!T2f,!;Q#6hjNBDht-pDmt'BBhilsi!;Q#:hgs\@ht-pDn%7J.hl#B(!;Q$Qhgs[9hsoUr
!;Q#6hl#ADht-pDmt'BPhhBt[!;Q#Hhgs\2ht-pDn&aI<hjNBo!;Q!`hqs"BJ`#MFoDn[TJ`!lmXl&aN
q!Wdkled9NpYYTCq!Xp6J`"<$oDn[TfAD/:Mr47/rW)`^J_uIEe_g!!q!Wdk_r%*DoDn[TJ`$:\J`#_L
oDn[TYMXogZetBTq![>%J_u%9rSR5Iq!WdkS);9DoDn[TJ`"l4Ol,d2q!X!qJ`#kPpu(r5oDn[T^#+Cu
\)6u=q!7PPq![h3J_u%9pu(r5oDn[TJ`!HabMW*Sq#0gbq!Wdkhqs^Vpu;)IoDn[TQ/@/Mhr"4gq#0gb
q!ZD`J`!cjpu2#Fq#Bsdq!WdkJ`$C_pu2#Fq#Bsdq!Wdk\)53_pu2#Fq#>j
~> 0 49 m 0 48 l 99 48 l 99 49 l h W n EOD
oDn[TJ_ugOk25smq"oXBY5a(QJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcDeNJ,
~> restore
31 0 0 32 512 45 cm
save
279 12 cg_miaiproc 
48 -48 -48{
gsave 1 93 div 1 96 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
93 49 scale
BI
/Width 93
/Height 49
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 48 m 0 0 l 93 0 l 93 48 l h W n EOD
JcC<$hZ)pBJU+eO`-LACJU-$rTm>YuJU%9AH%C8?H/en!H%C7qH/enDH%C7NH/engH%C7+H0kV+!.fER
H1H7@!.fEuH-^cr!.fFCH)u;O!.fFfH&6h,!1.t^H00D4!4mH,H,Fpf!8VpOH(]HC!!%:qH%C8>H/emU
H)#Z=H/emUH,b-=H/emUH0KU=H/em`H%C82H/en.H%C7dH/enQH%C7AH/entH%C6sH27O+!.fE_H0'>3
!.fF-H,=je!.fFPH(TBB!.fEHH2MsJ!2OmkH.dK'!69A9H+&"Y!:"i\H'<OB!;->CH&[+=H/emUH*DS=
H/emUH..&=H/emUH1lN=H/emmH%C8%H/en;H%C7WH/en^H%C74H/nr*!.fEIH2DmI!.fElH.[E&!.fF:
H*qqX!.fF]H'3I5!02>UH1-%=!3pg#H-CQo!7Z:FH)Z)L!;CbiH%pVB!9aE6H('$=H/emUH+eL=H/emU
H/Nt=H/emWH%C8;H/en%H%C7mH2%Ai
~> 0 49 m 0 0 l 93 0 l 93 49 l h W n EOD
li;T^Q?hY=irFXU\Tu,=irFXUgj,T=irFXU!I8sAH2`*L!2=aiH/!W)!6'57H+8.[!9e]ZH'N[B!;?JE
H&Ht=H/emUH*2G=H/emUH-po@H2`$J!.fFfH&R%JFo)1<"RH,TH%C8*H2_j]!<*8j!4mH,H,b./DYjG5
%I=)NH%C79H2_=N!<+,-!!%:qH%C5@H2^h@!<,(H!.fEjH/3cF.f05F<U9^:H,b-IH2_j`<rOH@!<//J
!.fF[H-1F3@/_qY/c.*u/,h!s-iP@i+9!5Y(&eI/!<*-#dd-smH)c/hGQ&&p!<,+[hs:?HH&$\EES:El
!WEW/*r#a7Jc=Qn!7H.DH/s8MEVfb8"TD*o:&[oe:]=2i<;p&"?2e@5C&W>UH2^A3!<*?)bl6Md!;1Vg
H,4e*EVfb8#N0n,C&S>6!<-s9hZ;Wlli;T^[<_ajqZ-U$n9OYOrc\8[qZ-U>rn%&)li;T^]6X:!rc%`7
rWqP0r\=9MrWE/)pttE<JU-*tfQmI7qZ-U%k'?qtp]1;@p##*9JU+YKrbqZ6rX%h7r`oF(qZ-Ujo&&d6
Uj8,KrbhT5rX/";rb;?<qZ-UErmpYtli>(OJU-^0rbMB2rXA7@rc7uOqZ-U0rl"9_li?<rJU,Ibrb20/
rXSLErce>cqZ-U"riYqOq"4=]o`0Pg[<_a_qZ-U,np13ip](;V!KiN8htZj1!.fF'H2_7R!!)rtrY+sM
r^?M]rbh2^q"3nQJU,^ij*CW1qZ-U5pj)j<p]1:frndG.puhGPli;T^p3FH!r`8mrrZ:r^raPj1qZ-UN
rn.5-pu(r1q#B[\R<b?Kr_*+gr[Rnmrb;?>qZ-U9rlk8spu(r1q#B[\]Qo'RqK`'+qZ-USrbqcJqZ-U)
rk/$`pu;)Iq#B[\hg'cuf6R?FqZ-UVrYGA2rW`A$p##Q(q#1!fm/R+dJU+bNrce>LqZ-TuqZ-TsrgE?7
pu;;Oqu-<ili;T^]6XC"r[@=;!!30&!re/Iht[$9s6K`:4NKVb4T7GA3W:u:/cHLU!<*3%QgEW)q="?7
!7h.e!<+;D[HZTDq="@V!<+U,!2ons#Q@ErT)RL5htZp-s7HBkao6XiDjPDAE;jtYGQ*$iNrGaOdcTH^
p?)DJ!6a8Nho+FIp?)DJ!:J`qhl>T/p#5rLs7HAChj<6tp&=X?s7HAChmD;%htZm#s7HAChq-c.htZcl
s7HAChtl6.htZcls7HA_hh9n^o$m\i
~> 0 49 m 0 48 l 93 48 l 93 49 l h W n EOD
o`0R#T\oP8p]#gEJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$cMrC
~> restore
33 0 0 4 626 41 cm
save
297 13 cg_miaiproc 
0 1 0 {
gsave 1 99 div 1 12 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
99 12 scale
BI
/Width 99
/Height 12
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 12 m 0 0 l 99 0 l 99 12 l h W n EOD
oDn[TJ_ugOk25t.n,N"[q!Wdkc/5b_q"O7WoDn[TKAV7;qVV)Bn,N"[q!YcNJ`"`0q"NqNoDn[Tn)&]R
Qf%T4o`+O_oDn[TJ`!<]iSXG)k5Y&Rq!WdkgY]Bqq"ihHoDn[TOl(`IrnmMIh>d*Iq!Z8\J`"Q+q"ihH
oDn[[rSRP1n)<Eepu1]"pu1Anpu1Ann)='"n)<*[q"jL[jo=rQq"FL?n)<Eepu1]"pu1Anpu1Ann)='"
n)=*"jkok0eGo.@q"FL?n)<Eepu1]"pu1Anpu1Do!9!>)pu(W"h;A#(eGk%
~> restore
/Cs1 SC
1 1 1 sc
CM
659 54.559109 m
659 51.303841 658.59363 50.9011 655.62494 47.679508 c
655.59363 47.646175 l
652.60925 44.390907 652.57825 44.390907 649.5155 44.390907 c
645.43744 44.390907 627 44.390907 627 44.390907 c
627 78.754547 l
659 78.754547 l
659 54.559109 l
h
659 54.559109 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 14 218 cm
645 163.44089 m
645 166.69615 644.59363 167.09891 641.62494 170.3205 c
641.59363 170.35382 l
638.60925 173.60909 638.57825 173.60909 635.5155 173.60909 c
631.43744 173.60909 613 173.60909 613 173.60909 c
613 139.24545 l
645 139.24545 l
645 163.44089 l
h
645 163.60858 m
645 166.69615 644.96863 166.69615 638.57825 166.69615 c
638.57825 166.69615 l
638.57825 173.57541 638.57825 173.60909 635.70306 173.60909 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 707 62.554546 cm
-40 6 m
(!"734)[ 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 14 218 cm
597 168.7 m
597 82.300003 l
597 76.338402 632.84003 71.5 677 71.5 c
721.15997 71.5 757 76.338402 757 82.300003 c
757 168.7 l
757 174.66161 721.15997 179.5 677 179.5 c
632.84003 179.5 597 174.66161 597 168.7 c
597 82.300003 m
597 88.261597 632.84003 93.099998 677 93.099998 c
721.15997 93.099998 757 88.261597 757 82.300003 c
S
0 i
0.74901998 0.74901998 0.74901998 sc
CM
115.38088 262.5 m
120.61912 262.5 l
120.61912 218.99066 l
128 218.99066 l
118 202.5 l
108 218.99066 l
115.38088 218.99066 l
h
115.38088 262.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 14 218 cm
101.38088 -44.5 m
106.61912 -44.5 l
106.61912 -0.99066556 l
114 -0.99066556 l
104 15.5 l
94 -0.99066556 l
101.38088 -0.99066556 l
h
101.38088 -44.5 m
S
-11 67.5 m
217.85573 68.5 l
S
-10.856965 62.5 m
-11 67.5 l
S
103.5709 68 m
103.42786 73 l
S
217.99875 63.5 m
217.85573 68.5 l
S
495 184.5 m
758.84711 185.5 l
S
495.16492 179.5 m
495 184.5 l
S
627.08844 185 m
626.92352 190 l
S
759.01202 180.5 m
758.84711 185.5 l
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 118 132 cm
-40 6 m
(8934:)[ 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
1 0 0 -1 471 119.5 cm
-32 6 m
(-.;<)[ 16.000000 16.000000 16.000000 0.000000 ] xS
1 0 0 -1 293 66.5 cm
-24 6 m
(#$=)[ 16.000000 16.000000 0.000000 ] xS
1 0 0 -1 691 229.5 cm
-40 6 m
(>?34:)[ 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 14 218 cm
219.5 39.000008 m
269.60001 39.000008 l
S
0 i
CM
291.60001 178.99998 m
283.60001 181.99998 l
283.60001 175.99998 l
h
291.60001 178.99998 m
f
0 J
0 j
1 0 0 -1 14 218 cm
277.60001 39.000008 m
269.60001 36.000008 l
269.60001 42.000008 l
h
277.60001 39.000008 m
S
1 J
1 j
0.60000002 i
430.5 38.999908 m
453.10001 38.999775 l
S
0 i
CM
475.10001 179.00027 m
467.09998 182.00023 l
467.10001 176.00023 l
h
475.10001 179.00027 m
f
0 J
0 j
1 0 0 -1 14 218 cm
461.10001 38.999725 m
453.09998 35.999775 l
453.10001 41.999775 l
h
461.10001 38.999725 m
S
1 J
1 j
0.60000002 i
564 38.764835 m
586.6001 38.659592 l
S
0 i
CM
608.60004 179.37766 m
600.58612 182.34038 l
600.61407 176.34044 l
h
608.60004 179.37766 m
f
0 J
0 j
1 0 0 -1 14 218 cm
594.60004 38.622341 m
586.58612 35.659626 l
586.61407 41.659561 l
h
594.60004 38.622341 m
S
1 J
1 j
0.60000002 i
513.5 79.400002 m
513.5 125.1 l
S
0 i
CM
527.5 84.900002 m
530.5 92.900002 l
524.5 92.900002 l
h
527.5 84.900002 m
f
0 J
0 j
1 0 0 -1 14 218 cm
513.5 133.10001 m
516.5 125.1 l
510.5 125.1 l
h
513.5 133.10001 m
S
CM
527.5 146.60001 m
524.5 138.60001 l
530.5 138.60001 l
h
527.5 146.60001 m
f
1 0 0 -1 14 218 cm
513.5 71.400002 m
510.5 79.400002 l
516.5 79.400002 l
h
513.5 71.400002 m
S
/Cs3 SC
0 sc
1 0 0 -1 641.5 16.5 cm
-24 6 m
(734)[ 16.000000 16.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
