%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1468.000000 614.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.2 (Build 18C54) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1468 614
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1468 614
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /e put
dup 35 /d put
dup 36 /u put
dup 37 /p put
dup 38 /space put
dup 39 /F put
dup 40 /i put
dup 41 /l put
dup 42 /E put
dup 43 /n put
dup 44 /g put
dup 45 /C put
dup 46 /o put
dup 47 /t put
dup 48 /a put
dup 49 /s put
dup 50 /U put
dup 51 /S put
dup 52 /hyphen put
dup 53 /J put
dup 54 /y put
dup 55 /m put
dup 56 /V put
dup 57 /v put
dup 58 /N put
dup 59 /I put
dup 60 /r put
dup 61 /f put
dup 62 /c put
dup 63 /W put
dup 64 /b put
dup 65 /h put
dup 66 /B put
dup 67 /uniFB00 put
dup 68 /parenleft put
dup 69 /k put
dup 70 /parenright put
dup 71 /M put
dup 72 /H put
dup 73 /P put
dup 74 /x put
dup 75 /L put
dup 76 /O put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<










00>] def
/CharStrings 46 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/hyphen 4 def
/B 5 def
/C 6 def
/D 7 def
/E 8 def
/F 9 def
/H 10 def
/I 11 def
/J 12 def
/L 13 def
/M 14 def
/N 15 def
/O 16 def
/P 17 def
/S 18 def
/U 19 def
/V 20 def
/W 21 def
/a 22 def
/b 23 def
/c 24 def
/d 25 def
/e 26 def
/f 27 def
/g 28 def
/h 29 def
/i 30 def
/k 31 def
/l 32 def
/m 33 def
/n 34 def
/o 35 def
/p 36 def
/r 37 def
/s 38 def
/t 39 def
/u 40 def
/v 41 def
/x 42 def
/y 43 def
/uniFB00 44 def
/uni2B91 45 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94D956C8CACDD228A0D45D434473E147547351FE977748F0633067336398513A5A5FE792D774B07F87E0BE3A1C82C8215F134C19847A4695B65A0438E3B82097955D9B6B57F6871A227DA0B34A95E21025E18664F16EA1AF652C3D9F8FD9AD6D33770A58EB0FC01F888A49D7190B37362170224C32ED1AA60C7648113A6B0ECC972C7B8352D396B4B65CC95438F019EC864040B689C33C8414782D6D32208BC752B3DA1ABC44EEE65978610732865B5416486AFFC0738CDF3F725C6DCC78344C579E5A4EB293D58B63DE7278DECE4FC1D46B907DA4FF4A6FD70D51C20B42DD65A9678B20C687BF8B486156ECB0E792F59BB0C6712C71AC0F39B671F27C6DB9537F81AB3E579F2B9CEEBEB69536281AA24BC1379F2F42CBA5141ADDE966059868FDB24D28D9001E16C17FEDC3EC7E1D7BA6C140A0BEBDF9D168B0513EBF58AF9A750DFBDD3693734D795416356E462A168C600E3E8C92846191928D44B8342C03B418CA2B31E10670A126E09F007D31F845DD18C449DE67A3FEB8E9833ECB2A20C68DC44CF4A9FCE997EA52B566BD26CDB185EC22FEEF899672FE844B866C108FD15AEF595432A015C9528A2475E39F08F656B798C8011078F6354B1D37047CAD95A6821752B80A8ECB628DB4BD6A14502CD8BB7FBC79A4A139C049E090B5F062D5C6C4675013141BFFAB68E9F6DC3BBF51CA2CB728BAD6463462E4B8919754F91643245BD0857ECD4A5AD3E771691F3F2EA1AC61AE54884598A6BA761A229B1162
4B22953C04C7BC968BFBDD09DFB0B161B28275380149FA70362E551C5D6DCB654E1964DC97583BF92B409175E3827C63AD2C09F5DAA2B93F7107C002669F2950D6F188FB0EA874FA7EA109E8568B749EF5F980B616C03E2ED2E56C890E0A67C4B981225FA256FECDA2C7A5D1309E1457187B77DB473B89D6C2187F645E4E18A9AA65585182FDD11DF8B035946B86D07D5B6A0BAC9AE03471EF7DB70B3476655AD0BB68E8D4A3049C4B9BCF32895C84F86D547D96B87C5655DD8730FB35EFA7CC18C2977823D33C0EBA104368AC35DAC9C955D4CD3FB6A8964ADF9161B4AB116121D3E0830000F833AF7352D5CC14DA482BACEC68C7CBA0972C95EC38622FA3F17EFE1FABBF5A1BF6E929B31F7CDFAD8EABA394419B7C7F81FBB9EEE88D178CBD3FA1EBECD17B0CBF8E80769A39016CBA42BAEE4407F0680820E66907CF1DF0F5F0DEC0F6895E163E2D0931BCB23789E4A989C58C065625447FD2D5C8A97052BF38C680C416E2CA775C7B6D662EA59DC42ECE55F4D5CD323673685F21BCF68AC2B61EDB6C9D3AD6E7BAD6EB5CC0CB2F1697FED0B933284CF1544F5B3480EFC6DC48CE33DC5C10FBC02D61AC734F3928B64E1369955A6C0D8A2D7239F018DB45B020D0E0124C6944B4AA21AC42D92812569B299AABDEDF845EC9878ACC030FE5E002259CF1FBCD06BD76885883E68A19F1D621298067C3B414A8ADE7328305A9ED19F2A55AF0B24BE86A7C1E9D8385E3F2011E1BDB00BAD3E5D28560176B738844C40C82BB53B65E12F4C511635D1EE0D8759E905855F3335DF4D5F48C8752BE7B4C7BDCDF77AF1F5E3CB0F0E7DD99943AABCF87624E382730D3A3F84F4909713738FCA2AAC3D09B813A84C0EABA3C3152F6FB4721C679F23E4C4DE2890125AB0A489FE197AC09699E8007224C0BA9D435665FB18946C6F6BF0447FFF833F4E17EFCEB71BF42006977CE2A996D55D227CC242D08769ADD4AC77956DF80C1783223BD9E74FEFA8078125BF0282F306B6FED9254BA5562B4BF8E43FC6055EDB890C0AEEEE84904377586E82EB6E1521FB179835915E1C7EC532585A271FFDD3F986FAA40B9BE6DBAB53B792982CF0C454528F31F6F4EFEA3D28372E051E64C4C6FA4FEC5A09B71354E200CF3C0A9C71B29B0195A4332036391A8734832C74814EDEC6C77833BF2A54C23211F5A46F5C6E98732D3E352B8A65478F1B70AC3301681D37526D20727DDDCA93FB7D75BDDD6100EEC9B49C4630511FF95050ADC60ED9A76100944DE5910716B7AF1B0E73FBBCD7F574AC229DFC802070CB324578826FFC5367591A87EF281728CFBA9CD0BE0A2852674465DD2A7A228D6A95E8FB7429000DA6190A4D433D6C2207B721CA623051D206AD8C71C5158A20BAF7CAF0C0263DCC02B1AB907045E74E4C4125EA34A466138EC194BA538C679A44269999B570BD8
5AC96DD60DBEEE94969866B322C8B0AFF4B9D4C670FA7E85636A72D8F29C2D6E7206B8BC680A1D15B9FEDCB54F696759E22307D0DB3C8B65639350090C3F81715E90A24A207BA0CA5EB4E8BAB4EAF7BFB617CDE30E6E586CC73CD8E0509E3CDCE99E1E805F51000A8A6602DD46F1F7F60FFC86A619C8457209B685649B048ED1348D6BA46DF2EFF7EB47868B6A431D4E3345063E5E4E4589B66D6D0C6F082C0CF8D8D89F10E8693F4B3E7BC05646471E5610C7E7B1C005FA883273E387D9071B09965BFEB79E54129B981AF970FF800F6CBE0498F098639931825243D1B74DE66481290C954C5BE0EEA60831AECD555CAC1863BC1DC92EFCFB767A261422FA4F831736BAB125AD5FE39A67532DDC0671E43115603C704349B39E428FFA96EE13CD3E57DC042B01EB55F215CAB33DF71AFD3230CBEEBE5242E703F573B6FE27111970D84DCEDE3D2C6EE82B44BDBC626B42BC851360E401133D7B72242B236841CEDF2FAE928757785DB4A88FEA688696209430F959ADDAACAC249750644E9AC23066D6BE6ACA4184264B5BCD6936E02E31CD52C006BE519BA9EA5A8AAEDEACAF4936B40635BC17CF1F84D7653CC625F12A10794BE98C02C180BB616AC7115C75F823F1C9F885BDE73639269895A82EFDCB58526790EBF3B0E04F81AEEB401855616F910F5806EF2BE79E6337244BDD47498388B293411686270C5E3EF1460EEA7D41C6C25C8766C8BDC669F9FD00F6AAC189026B4C2FA22E2BB1AB8A5DACE13B7F719794466EF96DF071782E825950B315F7512144D3B92E1B92BDB0A8B5E96C0DC47DD13408348988688D9FCC006DB5E217AFD1EEF9E0D6CAE7C4E91906B7B4ED09BD239CC3DEDBFC4C2458A975311D2B52ADB2231EF389B110F43753330F62A8E38DF48CB6503D4C4AAB75F043300951EB6A783BD588D84C1E83D225284FEAA5C0243FB786D545E64C38B5841559DF893C80BEE8FADF9A022DD6F6E5280804880D424C8C2589C5C3DF8E2DFE8014FD004C8E9F26B6208FA194AC3E28AE38FB06117974FF1CDA6CE05ADDFD1E7931FB6BBE12201F058F847FDDC842E638B70A3C517D5FA815AFA2D496D8120F67BDEB8A791DBB929B69BFA9D9B35DCD366473523DF3A6826134A63A35DA5D052DC8324087301D5BF765199CCBEBA5A7C9C5AE654CA7C673E5189669A05430A34FDD557EDA2128EF4D077ACFE75114116BB302FB688E155F908D6729A5C126EE22C96F84C05B07A37B082E34AC7ACA8B48D398380C243A8075BF6A9EC603120A793D3A47662D9EE3135A38E032266C304ED0AA9F6AA9D615E21BA4EFF24C47DF278A1F98A4E9F5075509B24C6FFE814FE289FB24953FD5D92030C59D6725D8AB21FF72D2A70BFC1B812197F262441555C9111E1445BBE1C195FB017F8F1DC11B62FEF0D46B6943BA58C00A8104D90400F7B094

4CE2E6BF1DB040B2DD111639407BC80E1AE0A64981B4838C4E8AB8612727FED20C710C4F6D50FE719D32589A95B63B78ECA350572C54E6798AA0E3E383A8682351F61743639C40EAB9D6BD87EF60FB7C8E8941F6DF2BE95A674B62AF2A670AC82A4E5140DDC272EDE8060346597BCF66575D7993F657AA989C9D691460911BF8D4E3C1D15814D0514F0C6BFAF1A3035F111BA17FBC3DF1ED87DB1E52FC8C9E6912593B42EA8B05DB274AFB9B8A11EF6F5312A6E8258CB155FB254EEDFE36A6E6302F0EA22233623A992AB8DF7D666172F0646E954D04FE5C82F3DE211944E424F4D58A5B84319B13F6EFAE7A0A9FD2142BEB9ECE77CAF950DE712060ED8CFD5BD0DB1FC7DA6565C6020A333A796FE470D48F4D9E8F02E0A20D8D6BD1FA264427D451DF1BA2CCCFC1646D3F256869E2C5F329A7EF2667196833EB31BA5193F97EF3E6979C70031E81424F5ED49E899B4ABA71B1A0C0D91C6F4C6A88910EA426A619546B40DF8F2A6EBA07AC56E58C2E10DD24EBBEE83525BA5A62955BD840F434A2A6E977955FA58B51B636968518ABE14427574FE64F7A806994329A8CCA3F74343F3EDED9E74F76BD897797E6FF47C73304685FA93729504478A68863A8780E305849CCE0543597BFA64EF0F97369BA20375BFCB16D193C1459B7AE7D88E0DAA54185CD8369D347293DBE9DEB5AA1863EF71619E0949B601D5296FF9DE565ADC929D842A367608D2E02778EAFD8F4D63F87D7F8A6DEDDDEE96E63E50893113EE94AEE5A4D3A300426334E74D068A4F6B45AA1DDB6181677D807851D8B454A79465F5485AAD53A37788E50A455A1803BFCAEBB831D73E99CD967939C0E45B8FCAC7E3B1D5210309D3A0F81BB9E39288D1BA677636529BDAF86A4317E07DD501B21369CB8633E3ACE54E97FBA25A627BD374B418979EF36EE8B0CA441A0B57B107870E75DA47DEFDAD77AC5C7FF1680D83AA389988973BC388BC537DC40422AA017F167566EB5FFB4C83AA57DF5EDE51B3C8776D009A4F5983F9116DD3515687EB185D89BCB2BE170BEF4518749D72E3D1CD2C7D13F8AAE7F60AAA5E9D19638BF4396D095120161CD7F3D6E1EC236ED8BDEA09CBAA0FF3120B1174101A775C746B2544D242D0C53E11ABEF715F98D64946FBD3FB99778D19D5973FA03F03C0CD71029B06356C9A2D8918A657BCC95BA9CB8723AFA639897A156446CA40A05EA58C7CD87279F3FE73003A62127B1DD668D51310596B8A96EBC703E43D2471143C5DAA100BE1AA87F038A930A3D0221F7DB9A82DADCE9D03A9EAFED809AF1220004B9191632A0AD7263D8B568366E818C859C054371B778C3C70AEF35B5A36428B0F6A0DCCB4172E846118EF2D1B644FB2F19D29314DE50515F0F4A400BBC804A01522A5EFFFE5271FBC172DFB08CA0D99594D7B5DDC5FD43DDD0CF33C8AB6EA4F2

4AC41C420890AB04E7F0B1A9C5DC9B904EDE19CDF979B988B3C781F220187CD5006316E2B5A85FDAC6895905216837C7FFA3A68E5521B15ACAE63593D4A6728715FB038D468296AEDB69463035EFEEF9268E391883D35B8DB4D6D894F2398A862938A883211B5188F8D8A45396516AE787AC0E04E77D4D303FD25B578C8ED9A4F4D01B1DA49EDDAD00DB55E63BE7E8E76D2AD0D9F95E33648B17D0919C0DB289245E22A90DF499DD5F5BC7C8E15627AA2B15E32D4A88CACA4C914F3E320DEDD9D9CD05E0705E86D9E3094575E8AA3948D4CB3536A45C2BA087A46E8697F91EAD8EE7EE9167A975BC6184D4B46BCEC9AC732E2D235F3D97AC5D72C4E4B7F121E78FCF8C84F5CC21D2A7F8B8836EC7B1D31ADA493AE17DE6CF999B6F11A21004BA67B48754B760845B78361D83D12D9D692CCAD380ADDE7C1F8A619D8EE3410A450B5D3AE628D3BA8C799B9C3F6FF6112DBB61DF877E0CC1FBA3CC147F31231E75590D3974DEE4CAB83A00CA40807E36B314158DA845176E2C8164CEA148D86901CF66D5F457E5770377169918FA13DFE615D36E1DD34A032F7F0D4B77EF71A8869DC94851C109D93BA08651E6831D51DCFEEDC517D2C21CF42215E4A05D87727598AEC31C56FC7CE2B725C1BB5190E1E4C92EE5ABEFBAA11C9219FB3C9DD2142CDB46B6CD8CAA4A3785AD8ACF7ADE22D7C357B181511076319AB83F1B260E78DD2DBB22A3A6F788E4AAA3278F90A8773779045B886FF04F98A5C6B96C28B39E09DE4CCB15AE4765F3521332CF296B6D298B0F2F78B5E53F3B60B29A8504BF7AC5CE7169C1947035C656B4A66746D2B95C22B430224F3651048E3F35FA9919F84512248F0C2712A177D6BEB3D3FD68EF45D0B980121887D53AB3D9657079AF3635087982A269B84F2CDD9ACF6EE66ECDA115BC542E45CE6842ED65600BF32815134638E1C803C2C3A095AAC17D2526391A8E879A6A25C38D064D788BA196896EDD34B4B30D7D37C66DBF182AD3CE57012E7E6BAF86D5C441B15774CFFF38995B193EB9E62408339E462BBDFA604953333A95E2200FB6F982B34689C5493A83C30805A2DB1419B749EA32B60457E361877C9A38DB3E7A82CEFDAB03F220DA7FB3AD36FE25DA23BCA60CF5AD0CE9EB3FA3E311B1C4FADC7D3D1A98B0C329B7E6759BBE5D8771A0AB5677F2623E455570F468551E2B144E8D35BE292D747119328BF75875C94A934E2DD73E964E9B7F7357B1BD43A4E211F86485589BE03684A33DD5E2A537DF0BC96BC304345212433EA64CB6D82E3208C71EB6FAF486FD23E9C9A7065493149A89642092144DD1016562EEF01657B77E79C310B1F250482721BB1968CC95234905B41BD2861C04D753DB192A340755CCBE303F7ACACDE085F949F9A9A6E37EE48240C4FE04858E8D35852E244D5FAF735D831DD8C545C413C885DE
651D6AB6974D3740EB0B38FB6F3D4082AAD8E5F568EEEA7FDF36E8858EE5D3B8FEC077F0031E4C1986797FC98FB9783A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 1468 614 rc
1 0 0 -1 536 489 cm
-51 -124 m
931 -124 l
931 488 l
-51 488 l
h
-51 -124 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 976 307 cm
/F1.1[ 40 0 0 -40 0 0]sf
-471 -265 m
(!"#$%&'\(\)"&*+,\(+"&)[ 28.160000 21.480000 23.720000 22.240000 23.720000 11.120000 22.960000 8.880000 8.880000 21.480000 11.120000 24.440000 22.240000 22.960000 8.880000 22.240000 21.480000 0.000000 ] xS
-471 -216.88 m
(-.+/0\(+1)[ 28.880000 22.960000 22.240000 12.600000 21.480000 8.880000 22.240000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
31 221 m
411 221 l
411 141 l
31 141 l
h
31 221 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
-505 268 m
-125 268 l
-125 348 l
-505 348 l
h
-505 268 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 221 181 cm
-163 13.940002 m
(!"#$%&'\(\)"&*+,\(+")[ 28.160000 21.480000 23.720000 22.240000 23.720000 11.120000 22.960000 8.880000 8.880000 21.480000 11.120000 24.440000 22.240000 22.960000 8.880000 22.240000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 536 489 cm
-535 -59 m
-95 -59 l
-95 96 l
-535 96 l
h
-535 -59 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 221 470.5 cm
-142.08 62.880005 m
('23*45&'\(\)"&361/"7)[ 22.960000 28.880000 25.920000 24.440000 15.560000 20.760000 11.120000 22.960000 8.880000 8.880000 21.480000 11.120000 25.920000 20.000000 20.000000 12.600000 21.480000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
24 522 m
431.51447 522 l
431.51447 447.60385 l
24 447.60385 l
h
24 522 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
-512 -33 m
-104.48555 -33 l
-104.48555 41.396133 l
-512 41.396133 l
h
-512 -33 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 227.75723 484.80194 cm
-190.78 13.940002 m
('\(\)"1&\(+&3!'3&8.\)$7")[ 22.960000 8.880000 8.880000 21.480000 20.000000 11.120000 8.880000 22.240000 11.120000 25.920000 28.160000 22.960000 25.920000 11.120000 22.240000 22.960000 8.880000 22.240000 34.120000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 536 489 cm
-314.99854 118.4 m
-314.99664 245.60001 l
S
0 i
CM
221.00357 229 m
226.40335 243.40009 l
215.60336 243.39992 l
h
221.00357 229 m
f
0 J
0 j
1 0 0 -1 536 489 cm
-314.99643 260 m
-309.59665 245.59991 l
-320.39664 245.60008 l
h
-314.99643 260 m
S
CM
221.00127 385 m
215.60147 370.59991 l
226.40147 370.60007 l
h
221.00127 385 m
f
1 0 0 -1 536 489 cm
-314.99875 104 m
-320.39853 118.40008 l
-309.59851 118.39992 l
h
-314.99875 104 m
S
/Cs2 SC
0 sc
1 0 0 -1 201.5 303 cm
/F1.1[ 32 0 0 -32 0 0]sf
-159.12 11.052002 m
(5090&:0/\(9"&&&;+/"<=0>")[ 16.608000 17.184000 16.000000 17.184000 8.896000 23.104000 17.184000 10.080000 7.104000 16.000000 17.184000 8.896000 8.896000 8.896000 8.288000 17.792000 10.080000 17.184000 10.656000 9.472000 17.184000 17.184000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
945 250 m
1345 250 l
1345 130 l
945 130 l
h
945 250 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
409 239 m
809 239 l
809 359 l
409 359 l
h
409 239 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1145 190 cm
/F1.1[ 36 0 0 -36 0 0]sf
-186.06599 -5.423996 m
(?<\(/"0@\)"&-0>A"&B$C"<)[ 32.688000 11.988000 7.992000 11.340000 19.332000 19.332000 21.348000 7.992000 19.332000 10.008000 25.992000 19.332000 19.332000 20.016000 19.332000 10.008000 24.660000 20.016000 20.772000 19.332000 0.000000 ] xS
/F1.1[ 30 0 0 -30 0 0]sf
-179.49001 32.584 m
(D-A$+E\(+,&'\(\)"1&/.&-A$+E1F)[ 7.770000 21.660000 16.680000 16.680000 16.680000 15.570000 6.660000 16.680000 17.220000 8.340000 17.220000 6.660000 6.660000 16.110000 15.000000 8.340000 9.450000 17.220000 8.340000 21.660000 16.680000 16.680000 16.680000 15.570000 15.000000 0.000000 ] xS
/Cs1 SC
0.74901998 0.74901998 0.74901998 sc
CM
503 506 m
883 506 l
883 426 l
503 426 l
h
503 506 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
-33 -17 m
347 -17 l
347 63 l
-33 63 l
h
-33 -17 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 693 466 cm
/F1.1[ 40 0 0 -40 0 0]sf
-175.60001 13.940002 m
(!"#$%&'\(\)"&-A0++"\))[ 28.160000 21.480000 23.720000 22.240000 23.720000 11.120000 22.960000 8.880000 8.880000 21.480000 11.120000 28.880000 22.240000 21.480000 22.240000 22.240000 21.480000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
945 375 m
1345 375 l
1345 295 l
945 295 l
h
945 375 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
409 114 m
809 114 l
809 194 l
409 194 l
h
409 114 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1145 335 cm
-96.32 13.940002 m
(!"#$%&'\(\)")[ 28.160000 21.480000 23.720000 22.240000 23.720000 11.120000 22.960000 8.880000 8.880000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 536 489 cm
409 -107 m
809 -107 l
809 87 l
409 87 l
h
409 -107 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1145 499 cm
/F1.1[ 36 0 0 -36 0 0]sf
-67.727997 83.492004 m
(G"/0&!0/0&3/.<")[ 31.356000 19.332000 11.340000 19.332000 10.008000 25.344000 19.332000 11.340000 19.332000 10.008000 23.328000 11.340000 20.664000 11.340000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
957 506 m
1337 506 l
1337 446 l
957 446 l
h
957 506 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
421 -17 m
801 -17 l
801 43 l
421 43 l
h
421 -17 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1147 476 cm
/F1.1[ 40 0 0 -40 0 0]sf
-115.58 13.940002 m
(G0%%\(+,&'\(\)")[ 34.840000 21.480000 23.720000 23.720000 8.880000 22.240000 22.960000 11.120000 22.960000 8.880000 8.880000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
955 578 m
1335 578 l
1335 518 l
955 518 l
h
955 578 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
419 -89 m
799 -89 l
799 -29 l
419 -29 l
h
419 -89 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1145 548 cm
/F1.1[ 36 0 0 -36 0 0]sf
-175.05 12.496002 m
(G0/"&!0/0&!"#$%&'\(\)")[ 31.356000 19.332000 11.340000 19.332000 10.008000 25.344000 19.332000 11.340000 19.332000 10.008000 25.344000 19.332000 21.348000 20.016000 21.348000 10.008000 20.664000 7.992000 7.992000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 536 489 cm
369.1264 -10.462138 m
464.25766 -25.468733 l
S
0 i
CM
1014.4818 516.71252 m
999.4162 519.8028 l
1001.0991 509.1347 l
h
1014.4818 516.71252 m
f
0 J
0 j
1 0 0 -1 536 489 cm
478.48175 -27.712534 m
463.41623 -30.802776 l
465.09906 -20.134691 l
h
478.48175 -27.712534 m
S
CM
890.90228 497.21835 m
905.96783 494.12808 l
904.28497 504.79617 l
h
890.90228 497.21835 m
f
1 0 0 -1 536 489 cm
354.90228 -8.218338 m
369.96783 -5.1280961 l
368.28497 -15.79618 l
h
354.90228 -8.218338 m
S
1 J
1 j
0.60000002 i
329.24814 68.750214 m
477.80048 108.20667 l
S
0 i
CM
1027.7179 377.09677 m
1015.1867 386.01236 l
1012.4142 375.57428 l
h
1027.7179 377.09677 m
f
0 J
0 j
1 0 0 -1 536 489 cm
491.71793 111.90324 m
479.18668 102.98763 l
476.41425 113.42571 l
h
491.71793 111.90324 m
S
CM
851.33069 423.94635 m
863.86194 415.03073 l
866.63434 425.46884 l
h
851.33069 423.94635 m
f
1 0 0 -1 536 489 cm
315.33069 65.05365 m
327.86191 73.969254 l
330.63434 63.531166 l
h
315.33069 65.05365 m
S
1 J
1 j
0.60000002 i
-72.604027 23.096611 m
-55.396057 23.42293 l
S
0 i
CM
495.00134 465.30405 m
480.70633 470.9761 l
480.50156 460.17804 l
h
495.00134 465.30405 m
f
0 J
0 j
1 0 0 -1 536 489 cm
-40.998646 23.695951 m
-55.293674 18.023901 l
-55.49844 28.821959 l
h
-40.998646 23.695951 m
S
CM
448.99857 466.17642 m
463.29358 460.50436 l
463.49835 471.30243 l
h
448.99857 466.17642 m
f
1 0 0 -1 536 489 cm
-87.001434 22.823589 m
-72.706413 28.49564 l
-72.50164 17.697582 l
h
-87.001434 22.823589 m
S
0.80000001 0.80000001 0.80000001 sc
CM
503 364 m
883 364 l
883 284 l
503 284 l
h
503 364 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
-33 125 m
347 125 l
347 205 l
-33 205 l
h
-33 125 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 693 324 cm
/F1.1[ 40 0 0 -40 0 0]sf
-166.72 13.940002 m
(3"+#&-A$+E&B\).>E)[ 25.920000 21.480000 22.240000 23.720000 11.120000 28.880000 22.240000 22.240000 22.240000 20.760000 11.120000 27.400000 8.880000 22.960000 21.480000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
638 210 m
898 210 l
898 130 l
638 130 l
h
638 210 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
102 279 m
362 279 l
362 359 l
102 359 l
h
102 279 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 768 170 cm
-101.5 13.940002 m
(!.&:./A\(+,)[ 28.160000 22.960000 11.120000 28.880000 22.960000 12.600000 22.240000 8.880000 22.240000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
945 101.5 m
1345 101.5 l
1345 21.5 l
945 21.5 l
h
945 101.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
409 387.5 m
809 387.5 l
809 467.5 l
409 467.5 l
h
409 387.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1145 61.5 cm
-151.82001 13.940002 m
(H-3"<9\(>"&I<.J6)[ 28.880000 28.880000 25.920000 21.480000 13.320000 20.000000 8.880000 21.480000 21.480000 11.120000 25.920000 12.600000 22.960000 20.720000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
31 101.5 m
411 101.5 l
411 21.5 l
31 21.5 l
h
31 101.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 536 489 cm
-505 387.5 m
-125 387.5 l
-125 467.5 l
-505 467.5 l
h
-505 387.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 221 61.5 cm
-179.67999 13.940002 m
(!"#$%&3/.<"&*+,\(+")[ 28.160000 21.480000 23.720000 22.240000 23.720000 11.120000 25.920000 12.600000 22.960000 12.600000 21.480000 11.120000 24.440000 22.240000 22.960000 8.880000 22.240000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 536 489 cm
608.94287 194.5 m
608.91168 216.60002 l
S
0 i
CM
1144.8914 258 m
1150.3116 272.39236 l
1139.5117 272.40759 l
h
1144.8914 258 m
f
0 J
0 j
1 0 0 -1 536 489 cm
608.89136 231.00002 m
614.31165 216.60764 l
603.51166 216.59241 l
h
608.89136 231.00002 m
S
1 J
1 j
0.60000002 i
-102.60001 427.65802 m
386.60001 428.02197 l
S
0 i
CM
937 60.967319 m
922.604 66.378029 l
922.59601 55.578033 l
h
937 60.967319 m
f
0 J
0 j
1 0 0 -1 536 489 cm
401 428.03268 m
386.60403 422.62198 l
386.59598 433.42197 l
h
401 428.03268 m
S
CM
419 61.352695 m
433.39597 55.941982 l
433.40402 66.741982 l
h
419 61.352695 m
f
1 0 0 -1 536 489 cm
-117 427.64731 m
-102.60403 433.05801 l
-102.59599 422.25803 l
h
-117 427.64731 m
S
1 J
1 j
0.60000002 i
122.65421 224.39099 m
16.02215 408.77997 l
S
0 i
CM
544.81329 67.75441 m
556.69678 77.516716 l
547.34753 82.92337 l
h
544.81329 67.75441 m
f
0 J
0 j
1 0 0 -1 536 489 cm
8.8132772 421.24561 m
20.696766 411.48328 l
11.347536 406.07663 l
h
8.8132772 421.24561 m
S
CM
665.8631 277.07465 m
653.97961 267.31235 l
663.32886 261.90567 l
h
665.8631 277.07465 m
f
1 0 0 -1 536 489 cm
129.86308 211.92535 m
117.9796 221.68767 l
127.32883 227.09431 l
h
129.86308 211.92535 m
S
1 J
1 j
0.60000002 i
229.65912 381.38425 m
228.73473 406.01932 l
S
0 i
CM
764.19476 68.590813 m
770.13092 82.778206 l
759.3385 83.183174 l
h
764.19476 68.590813 m
f
0 J
0 j
1 0 0 -1 536 489 cm
228.19478 420.40918 m
234.13094 406.2218 l
223.33853 405.81683 l
h
228.19478 420.40918 m
S
CM
766.1991 122.00562 m
760.26294 107.81824 l
771.0553 107.41327 l
h
766.1991 122.00562 m
f
1 0 0 -1 536 489 cm
230.19908 366.99438 m
224.26292 381.18176 l
235.05533 381.58673 l
h
230.19908 366.99438 m
S
/Cs2 SC
0 sc
1 0 0 -1 1216 273 cm
/F1.1[ 32 0 0 -32 0 0]sf
-53.647999 11.052002 m
(K.0#&;+)[ 17.792000 18.368000 17.184000 18.976000 8.896000 8.288000 0.000000 ] xS
1 0 0 -1 693 25 cm
-152.92799 11.052002 m
(3"0<>A&H01A&L+&!3*)[ 20.736000 17.184000 17.184000 10.080000 17.184000 17.792000 8.896000 23.104000 17.184000 16.000000 17.792000 8.896000 24.320000 17.792000 8.896000 22.528000 20.736000 0.000000 ] xS
1 0 0 -1 539.5 205 cm
-31.120001 11.052002 m
('\(+#)[ 18.368000 7.104000 17.792000 0.000000 ] xS
1 0 0 -1 772.5 97 cm
-70.239998 11.052002 m
(:./&&&'\(+#)[ 23.104000 18.368000 10.080000 8.896000 8.896000 8.896000 18.368000 7.104000 17.792000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 536 489 cm
809 415 m
859 415 l
S
861 16 m
860 416 l
S
823.39581 17.113752 m
856.5946 17.756756 l
S
0 i
CM
1344.9985 472.1651 m
1359.2913 466.48727 l
1359.5004 477.28525 l
h
1344.9985 472.1651 m
f
0 J
0 j
1 0 0 -1 536 489 cm
808.99847 16.8349 m
823.29126 22.512739 l
823.50037 11.714765 l
h
808.99847 16.8349 m
S
1 J
1 j
0.60000002 i
830.90002 448 m
879 448 l
S
0 i
CM
1352.5 41 m
1366.9 35.599998 l
1366.9 46.400002 l
h
1352.5 41 m
f
0 J
0 j
1 0 0 -1 536 489 cm
816.5 448 m
830.90002 453.39999 l
830.90002 442.60001 l
h
816.5 448 m
S
1 J
1 j
0.60000002 i
883 448 m
884 -2 l
S
799 -2 m
879 -1.2325913 l
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 1443 273 cm
-53.647999 11.052002 m
(K.0#&;+)[ 17.792000 18.368000 17.184000 18.976000 8.896000 8.288000 0.000000 ] xS
0 -1 -1 0 1380 254 cm
-67.584 11.052002 m
(?<\(/"&L$/)[ 29.056000 10.656000 7.104000 10.080000 17.184000 8.896000 24.320000 17.792000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
