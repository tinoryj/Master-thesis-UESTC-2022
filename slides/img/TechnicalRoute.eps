%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 892.000000 204.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.2 (Build 18C54) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 892 204
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 892 204
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAD+PingFangHK-Regular 001.003%%CreationDate: 12/12/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAD+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid18 putdup 2 /gid1325 putdup 3 /gid1391 putdup 4 /gid1426 putdup 5 /gid1431 putdup 6 /gid1473 putdup 7 /gid1613 putdup 8 /gid1675 putdup 9 /gid1683 putdup 10 /gid1698 putdup 11 /gid1746 putdup 12 /gid2264 putdup 13 /gid2291 putdup 14 /gid2330 putdup 15 /gid2388 putdup 16 /gid2626 putdup 17 /gid2642 putdup 18 /gid2676 putdup 19 /gid2785 putdup 20 /gid2802 putdup 21 /gid2839 putdup 22 /gid2855 putdup 23 /gid2903 putdup 24 /gid3028 putdup 25 /gid3231 putdup 26 /gid3238 putdup 27 /gid3247 putdup 28 /gid3357 putdup 29 /gid3373 putdup 30 /gid3461 putdup 31 /gid3498 putdup 32 /gid3504 putdup 33 /gid3524 putdup 34 /gid3547 putdup 35 /gid3548 putdup 36 /gid3678 putdup 37 /gid3701 putdup 38 /gid3721 putdup 39 /gid4137 putdup 40 /gid4569 putdup 41 /gid4658 putdup 42 /gid4913 putdup 43 /gid4952 putdup 44 /gid5048 putdup 45 /gid5064 putdup 46 /gid5226 putdup 47 /gid5233 putdup 48 /gid5422 putdup 49 /gid5497 putdup 50 /gid6754 putdup 51 /gid7089 putdup 52 /gid7167 putdup 53 /gid7186 putdup 54 /gid7483 putdup 55 /gid7623 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6A03F443361A3FD85060330600B2EE1862477F7E5ECF2D9DFDCAD4DE1E07F526FBC2F8E3AC118DBB1246F2A52D6669161A3E477D1F39A73F7CCDE45CF53D8D66BECDD0A873A9DBCC262F7E7A0630CFFF16DBAE0EA39651725EDE9E1EC34876E07BF8208EE901F90DD3E0B6F1163F9CD66155B11F2F2287FDF092CB60AB79428A2F2461962F00BB04FD66C5345E4B838ECFEEAAA5B4E9D536204825F1B02366CD904282C9C854CC7F50CBF744821D5BE53557CB63D687DBEAFE79FBE3719B0351331BB221E0E4B63C2AF25E4A3C02D47BE0D4C3D0281FA01048A9F41160A5AB700075588C874F55FC9ABD17A2EA48ABDCDB8E56D4A72CB29E99790EDB3D6BA9B968939280EF63983CE4B207D9876D8EDC9C39AC2BB034CB1528E5F5DC1965D7DA63A99898ADC8111BDE2FEDC400F8822222E94FAA39D00AFC7C8E0ACA8C726AA75C0EA03296993B01CF1B57D4E9C9DAE366D7204928EDB7CB016A3806EC863151AA799066F8DEB12ED0EC04A281FDB8B8D141C71132E3B36B9B2D9A09D0C8E5676F5FEC5AD00C77F8C5273A9A2E05AC3468468A8DAB865B1A94D466709E1653A50EA3E45D381C4EFCEBFBBB09CC23510D724268F38E172C59FCFB76ACD34F2C6A3ADF48A0171E69C01AF753357BECB525BF7D871778F75CCDBAE50F3B3BFB5A523A9B551CAC34DF5F273BA971BB77FE8AD8AF68925CFEC76FC842C1F582CB33DCEC130756D325766E3EEAEC1652FECD066407AA06AF9530CA93343DD604EA43595B4851F6A8825782EEFEC22AE97D9A3F8258A42332E2CE77D45E7DD52AC3A3F2CAEEF35EF6A6AEFA04723F57EE80EC4604FF109B6B54A2EB3ABDA5ACDB0CAFD6D34A6F2A454F519952BD99AE8118239BFDE778B29A4A5E61F45B55F08F198362C411221204B0094C6C5D12419EE88B521605DF42608FCB177660FE5A3F74C78A66409F47BA7E9417AB85B0FB2870BEB25AE7D6CD2CA82D068CB58FE6E9F520D0AD2613BEC4A85309AB036AB6B5B170F6C9286F446B074A466DFDD6A154A54E798EA6F4B3E8E70B056DB5F045925A30FB82FF993223E11511D93F04E13DF23E0037D9F06EC89071276E19279A8642A1F932F4B06F8138E99575F8BD8B23D652A6F27DDC15A7F310D077FA6EB6AD9C2E712150197ADEB60D4D41AFA5C3B086074310132345A9FEDE0B174A8FCF94A8EC0155F788AEAD23C9D7039E630D0A7BB9CEE17B03B0DB2E8A70010D081728F409A0A7C2E410CFF509166A7E692F81982B49811F7B71F0081B2670541C6727962AAE690DA440EF2CE1171FAE9E1A9DFF43BEA86774B0AF28C04AAB036E42155F0CF594DF1096B287A6E33E473D1ECA23C535FA9D92CC419A8EE9E453FCFC266342AEE81525805FEED7046618593E2ABCF4AE07632D785AAE8A01F7905A86E1354216257F0CA720142E368D420A5FD2370803C1C525AF83DEA1B0F5829428618FBCD2D134A24ED107816750BB4CCBC2A0D612D7EAFF4B2F9D8F31A37F759B96BCA6F0EE8FD940497193F4E4EB75CCA9D44541946FD4D6CF3F10D8E448886C8B4431867D336DEE67E983F4A050C448B47886985518E2F727406D7E280602E144D5DC5AF4DF4AB38F82325736B40D3431652B0D54CD880352FD8E5A667EF486AB6F0EBDF4A0200546A5EE4347297B1D1C373AE5FF677EBB9F0D51F9B890678DE1A538EEA27DDD96F21D6FFA363C99C5852C30D51BFA39D94DBDF152CAAE3A0C13FBAE0D67AF058D34CA4A77D3C395367C6DB253EB3230D1F65C5FCC1626DAA268237595B46981468B4753ED201B56392B8ABE7925DC519718FAEDA6557AE68AB9D4C15A90577C19178B748A5E1381C716A35C9952A65EC6881F30EA8C5DFE234B38D8D5563756F7019F431690CF4BAAB7FDF9CD2E69FCD68984DB86236A730537FADF3BF895FFCD2FBC3A7B744E736B6CB1F3F3929D1A3D5DDCEF585AE4B70536D1921D0B61AE1264E1A6A0A2CA4319FFC42CCEE14F62CD55B0CCA2FA7977E78EDE3A661E6E847D922C42466EA5AF4C97D6C9463171AB44A8A2CEC501D0E6E72B84567D661A279B9BDA463AA3A96EEFD1882901D89DA787A044CD29A53DAB5DAF99C26E1149D9EDEE9A33AC2D8B0F841B2EFC194EAB1D6CDF11CE8D50455B78CBBF315EA7FF6039F6F7A6127C5394868B219B694364FAAFCFE91E0B74BF3A1E05F40138A2B32914DDD23882413B67E1B8CBADC711E8A00C3DA2E54E66CB4DECEB784735CA6462EACDDB722840B2321C217A59B80ED431B1AF1E6CE4BE2D8ED8AC4D0D523422ABA87FA4A179CA21CCD50AF021BFA2D014F7F9EE2EFFE65E2748F009FCD6F86AB663D4C45BB65F10CA1140024F85A9FD9E3A63FE94A3C6E4823A6D94B26CBFD641DABE92A3EEF6B5EAD376D0304BEE8DD0DFAB9FCD4E172519E78D161A0A2DBC1D00B4DD8F8D8E8FD519D9441783C590F17A5DDD52D2080A5A19442A676C639D20E78849EAB344027CB86E7A6E7E7436FD435E048A16F6B10A18C2F74EC8B17A42CD1EA27EC6CDD3FAB01D802FF15D3FB1EEBE584E873187B1B947637337262A826DA634B33F145C16F1812AB2F81643491F0BA0BBAF4C9FA637C4BC111585DFBCE9438B0E3E11C98F592A21FFF260D121B27E67C3EEF66996D4FCA7B8667461F0E70B5BE606A5B954FA145802913CAB6B62A7242AD476F498DF3634AC1C8B2A964A71C32CC140F565224A19B9DA917C5AABD8449FFD57A41151B5B0E50803268D006F37042ACDC56F7CE7A086A5585691894743B7063E1967315FA56CFA743B242574F8954E2327F2C44F0D8FEBDF1487FD05AD54C16F183E9E658A43E80FB167DF26604D07BF4F15DD9FF3F88E071E9F37D18DB529C5C6F37341872E1D6455A4D5E5EF34596A4E6FE3D2B2171D6FDA943F2BB41D9B7CE47E2DB624F3214288F19A6DEFA773C3589FE8D58C9E022B681266C70020876A069BE461EE1D774AA226A01333600BAAFF33329C301983D11FC3E8799F396971CE52B9F48074139B6A0FC3E3395F4DF157AF9D2DAE9AEB9997B47D5880C78018D2BC3EE4E366B66B06F5362F3E78369C86F33C80C3FC0EF2385286ADF809D1C60301B68C58B171C4661F1459D577EC6A4B2AD582D931BA20281CD5B82AB1F4B7E04D906918E55D9C0FE3BA23C27EFDDE3E7A9CB0A0622E17F1ADCD5F3D6987D69615113417A33005DCE04CD4B723599133AA880500E74D9C76EB614503148CD0175A3A5D5AAA8E77FEC5197F25BF12D214727D30A1AE463FFB07854D4A74C95E667E24D00C641EC6C92C82A8387399BF9C3DE1ECE99C2B421E1500543ECD00CA8F87B78ED44CF06230970EA1681DC57D036B1BE6994A7CA310E3B9751C56776AF8AC5FA5F4239575CC383DD198593605F29BADD68181F8D9155F728495B0CB47FC3F43D4BAD7E3D516D09D385467A77CCF7B02C4ACC21A0E6BA461262B43652CD7F0E342AF2A575CEC95209967126D4986F33EF105979147DC304525EE773BEAEDCEF49CCDFC45BC7B744D41D7BEF14B85261A30DFD924D4EED50F6D8CF3E458AD5E490CA911F387B7912C30EA88FE0229F1732ACB11D479290E68698F1CC0BD86E5E0941C0D02EDFCC06EDF2ED6CD18F300817989721C488F6E60BE7959EFA6CEB0048CEC4D88A83C4B1F6542D8FD1744BBF42E38B4ACB7F4539653D8D32964E1124E2A04308C5E9DE33D06CFC0CB3EEE46D2047A0012C50F923FBF939792B6CD340B20D2F2B80AF8B723998FA42FEF6CDF6B960C7E146D90E2C9A0A47A001696ADC677E0D4C10159E6F47953924E412A25A8DEDA4CCD51EA8953F35AAF59E963BE87679A65D17664BD3A6F9E873B551ACAF445FF676C1786DD61DE7C85F218F94CA8DE55B0FD9BA8BEC2A427A9524976B1398948EEB3F272DC11A3C6DD8785D6589CC899F4D355D60768A678439A3603CF4F2AD4DF15DEA04C0E30DCB84797410885E07C8E474B5F52968D0428B7EFFD01C9E6001C33769B19C0C601A8B40DCD4A6DFE5E94721030B04DF9AD36393426FAD926972EDA0C74D1BB538B9C1DD5E5CE4FC65F055704C3D749FA3CE814B134B005017CA6641768DE096953EB2BC5AF8B4F6E14CE7BC391E86BC6CE218273CA81B2DBAC19CE3AECD4C70D0A27EC97794B8F40774CD1959ED91D78F34919B988AD1DC8DB08B9116745A6F1AB455D2F47C58EB3851B4F1E2432BE3FED50D523A2CBE4C975B7E6D85896E706BFC52746AEF27C6E3BB1E913452962923DCA4E63D6679B808AD7E830763AC42CDA8B1BD79F26AC72ADDC0E89DF90FCDDD4015D068CD8D854BC6D25B80287426D1990E72C5ABD54A253208C0411BCFBE4FEBE6C2554E0DC60139A6802EB38397A65213C6F6EA4D192C0C4622388B0130DDC97C8269D745A282287A2BEC950E0D048AD6C3658471B688F8B4D54492730D40E8D25B407DA5FF4946E47D69686FA74A351AC7C50C968CA441927A73A87FB29E2DA8A76C6399D1ECB563D4909081B3E8118A6F1C5C1EAB8D4E69B42D962FFE1DEF0C62CFCD6DC1F66E0E65850CA820E80412CFC7C1BCDE8D9AA10730444D5D9A749A2AE64425103D9932A098207D2113FFC652A9E700B40A35CE85C7190BAF1DB0C967DA37082CDF5AC29D5556ACB3C3B4FB0A1EF7CB6B5F713C912FE0B074E264BF499E0DB2F2467A0974B89D300C101D5A2816654C388A1FF1968B5A61846472272EC9C4DBE0011EC7B9A09B498D21A390FD2670DBC6EE9AEE2E1F6B6DFBC058505059FE05CB923D512320E4DA56184BE967753F43A8101A7A6E2908B7D4A698CC8AFBFA03A67F8BD6C063CF85A87D3E9B5918E2D8B54FBFB67CAB83799C2987146E6CA9AE52B8A920CEEA536EEC67E9B4E69421C492F1EFC833A1F3FACAF0F4ED6BAD8F9E2B0B1546DC382752171083B47A8926B19ACA1DA1AA10E8924B3B62DC89DC0E672CE5819B253D256D7E4E5C5D4F68A91B445076762DBE37668EF972E499796F6EE6F04FD8D6128CB16105FDE1926D4F4086CC1FB870B3F9C21CAD9D4BEC17F17889B84EE49FFB825CE302B2B75A43050D602F83C2F7CDBEB6C98B037C3B6CAC3619EA24CE36DEC070BF4BC9A61E51C04CA5C501D52F18F9FD5B4C23DD26C0950531D1AFFC9C0A7D382995255739CD8B1E1C750E1C46CD9D0ADE4610CC13C7D5F81A2A280F06E0F95386B002CC66D1C39BCDF06F116C31E458CF2A009D6E7AB9FDE7FAF272C30A9981387A8730B788CF42DF9C84AB70ED3543AAE3D493CD1C649E6E9BF22D9EE6623F3DA38081E8443C60A51721E363B101C6177A13B2742C529F216BD9418D19E549E4FC359C8E318CAC387FF313B3ADDA09D9601412F73909A9E796B5FA02A01A79F2C0CE8D8B7855F8AE562DD1AD8E1927B3E49C9B65D80503D7E65DFCBA49A4D3BB1996E61B4CC372D597E9FAC70F7390FB913A9801EBD5FB75ABCE0BECB71FB97DF1E62829B50AB2FE2408F5D0CCD443962E7354FE9DFD6591C2C8C8D17E14B5C1212AD189B3E58958CE9D900E5C482D7BE6F89B97BEEB98C287752E5026C193E9A002080A132E8D6A2EAF45D9960AEE9AEA0BE7B7B65CC1981B371CCF4FAF3417C0D43D3F75339B169C34989A079E67DDC8D289A6DB998E246CA0D7C3348DFA08D9D3996B5DB487A2CF4E61878BE29CC3FCC6C7699B0BEB1E02C84544F20DDBAFA2E76168531BCD998856EF39E2F0C095597B01A94E48E2E0F24222E6F84978DB2B421C542A1FBAF8D352DEE05130673D6B4E817512D9A4DCF0E2AE3BC6D87240A6C456567F0BDCDE1A8AAF64E5FD41A075C526BDC7C6D98C1C46B5D6ECDA6F60858C25DFAE77ADE395B3A446871B545742ABEA40A27C443DCB6CBA2787C748B2C5BC73D7DA30A3C335D370C2B8C9E84FA20B7E8A6ABE22D17CA92581542141139F07E1A2880F963E2EF1E52EEA929E84ADCBF1B101A331A4A8D507BAFAD7C1FE0C15AEDA239B98AA56CE2F25FE681A6C799DF564C3F47EFA1FD076B2EE4A0FCE58052E9B682023C1DA5C7CEDBC6741493A4A4B1932847FDE355DB3C3915D307A91AE8C8E8C8D0E124A5036138AE155CCC693F9CA6B2708D88DF8A550FD453B20353597650743584175E7C59A7AB7E6918298403E5C323EF9AAC7F9531C18DA028DC3A636AC52EAA075698C00ECA3075C9C8182692EE3327407C7F16A1CC88D377C2408917F404DBD965A6B2D98480185DBEDFDE6999D6534911FFDB6FF5B379A7F166F8FCB9FF1B37BFD7638B4285CC33C412A295AFBAB88A228579C32420BCF34F61BFFF20C95CBB8DF73522F2C852A5739171C7BC9A75D2297C21590D39AA7B05B6D5C2E4918BA5369315CB808B64877B1C24BAF8218E54401C25045666C6AB522BDC9D4EA4534BD37E0866CDDC687E6E9D8F27275258BD78F3845E9D4375D8831CE91B024BFCA93E6C0BB823747D53CF0DA9D9698F91E237D8D789C9E7FF7138AFAB96178084B443C70717B4B065F73AC76F0F8F358F1DC25280F3CC3A7FE6B267CF78B1E223CEB869B8D6A0AA3A07B7EE1E39586C13EC9F77EAC977DBAD28A4009EA23976889DEE6D1F4ACFC4D01AA89186C08B06718B3F5AA2AFB5705F68A2141B8653FED17F39F093BB7BD453BC6AD1B857F55483591408038E0910DD5F04F462F2172CD5B8F3738019F27BFDDB252E3BD21FCDCE264955265223C7E971F1D6D0FE04E335F3DC475FE7646BCFE6BD7680D6990437980DE94F9DE696514DF81797244C49971398FF445D0DEE756BE264DC347334803694BE6115ED9524548BCD8A54D9FA0F4819423E1EFDC9C0EA2E884FEA749A25305B04981E2E3BAC7ADAB34DAA2EAE6DA274F07B286DC0826E7D344E75326A15FEAC3F1E8B32EDB6D4C7D5A8D225A81F274724C6147FE05BFA2346C1F23B987A6FCDFA619F8408547DD1AC4CBFEE21C63284364E17D87AB02966D2F2363E238A0BE9D0162D29808C909E2CC5746DF85BEDD86535B6A86998E8AD9BD424267B9E6C504068B3E3ABF80456D76EC9D78B4A719B4609845C1B33D354D18AF0D258F47EB1901DE7CE1A8A01E84A41FBBDA6087048788AD57C40057164B054A8FBA4B1C70A0F2C404F646ECDCF99B01FAF7E6C07306CE475CD47BB2C69DE3392887A48FB9DB2A1A6C5CFDB6968B020837796C2C54C4ECD2FDB0387E9B3693AFC421CF1A35BFA5E9FCFDEA4BF1A30094E8354D9D18480B7CA6066C422A36DD1967170608C1E136056D36D67EFB8D51A2D10992E7CC9FF3259735E7709AAE15BD3285A1B7AE3BB9BFC5FCB367916D5AB7A7A3749DBB2CAC5DB979F2F7C465466D1BDE881DB959A044C59F73496DDC2AA0ADB9DB0ECC40478705DB94A89BF9E9D3433CBDFAF9070562D5964E49BEAC2D6B1DF9A1A0DE66DE3C0A79A49F7CFDA8D4514541510C5F46DFD224AD418C3047E64C73A0FD58FA1E226B8B932A195CC8ECF752EC04237B22960362424719D65AF0B3E7F4159EF1AC533DD3B28B2940F87D35311E2664B07E7C4EB17D0695B9F90D626BABE66418FC06DA3F2368BB28A3FAFC531C5D57C96D16D9C7A25D772D638684B0EC73A2ECCE214B145D38A6C21A7184C352BE20D492333971C462CE0378D4CCB56FB9540928559F6073E1770B022CB7F79C084C7D2F85060FE13B334500D24507BF66F86070A1038723C0A7F5EC6DF26872F5273CE39FB9CEF9E68FE2A087C158F521189D0187873163F97AFBDFF18C4D4C7BABBB8595E90D0632AEDFE43561A126B0B4111C53639515A181D6357F83621D01628F3DF43B1288C3815FD4EB9BA2A8EA05BC8E5D74F87DB05F8D5C723F5B336209C2254848740ED69837689C51E29DFCD8794587C478A13161F8A5E0A5E9BD5D6C2BD82B38E94C44804BBD69F4E692E0B43A79F12F8E90B964770EF160AAE1BB68B274F484B2A0088A441ADEF90E443D0A77C4221CEA04F4A6663E182D52F2CA1D3B56BDB166D53F88B04A7CAAE512C46A27E7630D29F047A155C2CF635E75784E1E383C851431A699584D82C60F6E1FA179AF402D2D9DCF29BCC9FED11FA9C16299B44B9157487F274E81D1C0E0CA687E012CC72F13A7050FF81E06DCDD6580C97F148F5BA6BB3659E8FAD3C1B72718FC19D53FDD2CA2021035F9B49EC9587706A5335741F8E6A4833A6E97BCCED6FF5CD3BCF4D269C9B9A62EBF74D67429EC9D748B72C88A471F310C739EDCD3B5DD50C6AE78282702BEC92D40DE34612A7606E3AA8E2788DA280B6917063DB609404563CC5A6953493F726CF2451C89065E383F43ED2927808CBC644C72950C458B9D3A4560423AD688550D681BA321A19FD11BFF7997B953683040642CE3398162CCCDFF859BA4A73A3D86DDF1A788B296832C690155C16BF63D20B130FFA08E54C49A7C1D56F05674DBCF765117EADE242F30722AEF766D10D48530727462BE5334A9AEE6AFE6DE9070C8842CD3F8440C793FB2D9B30296D7AF4CFA1B2006FFF6A0B361CFD37509346C935B39554D6E459F8228B77F679C24119E636846D83402A71DB66D49020F74CEDF48A676A316E0072B83B4CCB0A54CB8B48072A05FF76B89CCD22FDF3A480E57398F6E2E7A6EB46616906EB746807840C6D8B1E72BB83316E956CA36C82589714A406FD7E0BCDAE65CE7FCB405EF32CE4A3422C87BC65705E3C44B7902CB6DAF90EFAD377C27A71E2D47955FF15658B72D7546B19A0F393453ABB901026A72AF2E0069B7624F174A24D46F1D3C016640D00C3928A19AE6643E75CB65F0F1D6B178366938AAA55B082DD6A1B849ECA7571A2D211F3C0E0E646ED128C4BC0A1F7CB2B80E815846B9177BCDD2732A34B7D441C2FCA4E4E41A12379BAD2966ECC1DBFCA074E9A80708F7D4FDD278975E94F3FB5CC06E78632410AD86D7CCEB840BE97B7FF8077C6F52A72830FA9A4F3847E13C327F837DD8E00669362451F7E430D946274D4B7AE732A471BC9D482D7EE6E27B40A55382DA6DEA9CCE44016E5A45D53BF5B64FF7674A7A340E25B3FFBB5E35431783CF9AA5A1ABA0DE6EE30C208C643B23033309DF3525B6BFD3B603B9A0783EE726E4B4B611B42DFC423B0130108634536986469EADDBC865B07BDAAC6D917CB42EB20BC16DCA080571654B1276B5D786EF28559C3928E8FE3DECCF5977BE15FB66586192393C682B739EBC3EB5EFA007369A560A751B3E37EAAABCC923D90A0F1082372FBD881FC70F0A5A436E9365086543D76A2C25163DB56998C83B6D24B10C50993E23C4EBE3C4B8D0DCA81098DDDEE4ABB47DE75E256CC25325E5D1B2565CF334B2CB9034A25666B79F8B2F6AACCD8CA25C2666C7C96C88464BDA96015109E07F30B9F4FE8A744A8EDB5407D2C4D4615666043235B0137731AAFA611BEC66ACB035D9D2BFC042CAC7A248F60BD394D5B847F331427159A7FA3DD6B70C06C6FC170323ADD321D4661D30AEF03880A2749A6843CA6A6BFAD38597248FA44B6A940C88FBEE3F894B679E068A269D9835512225FB2944C6DCEBF00D5BCE4DE62CE66545CB69A4CFB2520C127B2CA9850165A5015F0FC4837DE0F1F7BB2E3336296E0A939A6C0FB9FB248D10E57BA2B5596649AFB83BD5DF455598B8814AE2451D71E8C97C82E666BF8F54884684A89BE60A0EFF9A092F3DA08F2C211B17F13169B1C786302127B195CD2F266D38E23662F9C8F1FE7F2E998338D29F00A61FBB5F59C8B4F202EA456736D4DDAFCB593A873A285371846873FEE5F7459562ADF909EBDF62822CFC99E865D2F062F43D43B68300441E07C680A1C78B8FA70A63B7CF8E3C39491D68337AF2E4E0A75F538F89704186D8F3C97F39CE37390F963082944DF1675E0E687FE76D032CA9EA6DB550C69C9EE99278979E98B281017C8F9A8914FDAB1E59D70358B0D00C5BE7EB69DFA3BC5A87ECDA1FA5B461F46936F533CF5F5859C09A125BF495183B126A781B23111339236A94A29CB291195A0AB68CF3F12CA1CD30DA3DE2E0F169C0E6421452C8E58B5D10444F1EE56D7AEEC32EB6775A76ADC12144929A5626E2FADF8FD8175E9B995D1C489DC0A750B2176CCBD96D755C3F8EBE979B5074DF73785DC59F4A2A30135326D58375A5B6E9EDB85BAF5B31E69AC40F739E8A63C9995899BDFBD98C3BCF5247367F5F9AC09ACDBCFCA09B8B262E2816137CF5BE85E68CD74B7FA2420E5E934F61E500E0DAA771BCC79DF97C6D2BBC81E29184278271561E3502F42C3B2484B019DCCE681B8CB80CC955E2C3C33E4E95D76BA867CEA90F1CA49EE5825266B28F6EB4D274D5D97605C2D84971B4972EE097E6B664C0CE45AA49CDF31187C6F37594FE3303477CF1438B20E786AA7CCC6F623BB8968AE90EDDC41C91FE74F1547E50DD6C2D1C5FD00F170165DF488A5C7EF7B01D35D109747AB0AD6F87B46CCC4FDB623630F02860556A3317E0CAB62DE18936405D41B61510AB6A986656D990854EAA8905ADF58BA99D0324D365FA66F971ECB23176DA7291C161FC26406B837B3CD2DBD12558FDD1F9DC587F047C61C03834B128042CB4D8CC2CA52A529190C9225A046FF1CC83884ED791A93765BDBCFDF5FCCDEA7C247B20D1C383E9546615A0E247A33FBEF28E8670B4915F8B13D04F213D05B5C65B3BF306D1E33F92A9393D1B870244651C66F51709B9F90363D9D4915CDB8CF51F4AE510240B0A33D98A318BF6318F07B8070BDF84F84656044FC2DC82E704A3962E20A74B7430DCA521C52D8A0CEA7793743F9BEC160C599E787F84527DF20E7E0EEC3F4CB88801548187611433D17D1F35C0CC04BBD87D4F2ABA09AD29F867F599D6152E785D9CAD4644F8EE2502A60FF0AD9EC9E7BB55BE32AE811A7086A329F7A54F549985151E2E81298305A91F290847B1C884816E28D698EB1BE6CC8BC58F15C801C8809929941C5849A611FC7B79D3D242D791BA8F7C408A1668E98E364241833C54BDD5A610BEF5359B2DAB8797A2050002B52560AFED6FAB6EC9B793065901C8DEC62F0BD0024745F8DA56D9FE5949D813BCBDCB7283345D16FC29A3BF935CA6E172D47F49572BC035D2C897E19DC9D6D34EC5E26EA8B4B0B002C1C86C623C68B1454920DBF7C687FB46DA343FD26A9B0B929523D65DE07918A8701E7F7178B33D26B7356829B209D0E1CDC61443454A56322B3769C5329E77CEA8F01F46936BBF87F61474A28A8CF572D1B32FD007E4B374F9C367C141C12020E1D06476B269537BD1E24DF8D92DAD938FE6373251256C9931F30CA2D22FB709CCFC895E9E0FA7515853FA44ED37020ECFE8EE7A712C1BB3E75F15D26A4DFAC5C048C23864E5CD13EDA0FCF372AAAF6134BEEFFF9E1182C243C3B19928BCA761EA79E1E4D6C99A55BFB2DB127CAE1F82FEFEB21BBE256B4F6DA4CC412277B33C730287BACB8A21DE97ACD031507E8C6DDE5D37653F5BE018EC9B5280231C66A07BE2A0CBB531A7EB32FAEF8895E5207683E59E7637E40DCB4FA7DF69C7BBAE56D84A40C45893AED8AAD6B17D1D499C21B22862794EAEFD67E92C050CF2400FB0C08C0BAEEC67296A05E3763C4C7D819F2DB35FB491BBF618C94177E199654B1A351D1E7592010F234DC855F5B5BB366D7C411D297D1C6DE7A12B6AE37666F744A377C8E1B6FBF136944B349B094CB05A1CAACDFA86A4334DFA082164107C82F3F56A2832BA22B47A6BB71E552CC33309DC960A9B4AEA8EDDA1D2FEF4785A90F241A64C9934834B0F591ED570DD8DD7276A00BA59818D27B95F304E4542AB070E90F37ACE3FAA4D67656459D156872E8FF18FB65A38F5C3677BEC339082908C33BACE0428A9615BE3BF168CE1F4C18250491065EB5E459B145A3DC83ADD65CB3086B4D01DEDD2CE2C8E231D82282AD22B4801A61F21D58CBA0D7C94FBFE48D03732179DBC21BB96BB88E7D6BE10E72DB832F5FC3A5EF3019C77E70F4D2F5460B3F320673F7C7BE3C7ADDB062BE1C9727218FB473D3E789A93C1F284E6DE1FE65F10053C2AD2C2A62838735F36BC859BFCA599331C6149DBB630CCA400BD4F56C944F0079D982669F622664B0B7BDA550E9AB2BCAC27B9D6CECF6177DBA8AB8626C279A376E5DD6E0B62D581E1803D94639BEC18D0ACDD7CE526DEB85BD3E7A6596F529280C5967822F9F9549C2DD699807F0F4E8A0CADFCAC9CD1DF43867C48CBCA41844C930F2EDD7E10C6E029CCD22DCC50DA3F91F60800D6D0D73DEAEBA2A148DB366C72D470AE5C006D80B8FC8674AC839BDCDC073A990C593388F4C135549062251910CC4595D68E49955A3F62DB1F6FB14BC8CFF1224045894926DCA44EAA354635D14435786FEF7A6C6C9BB31B3CB6856933922D298A6B16678ACE8880DB9B487B8DF86B073C4D458D0ED266DC436E7A5EF994CCC0A4295BBBF9EF2EEF0310908198C095DAC6A7274BE11E4894FC685A6D593845F63E3285E94A722A3287C28576D2BEE750112920A09DD93408EFC3EA629771189E987A15291BFDD98D4E14714C2584EDF26CE26A3C7C1391F8B367716CD48B6644D26A171CC195BE2100771E5076817E4CBF70A7810107BA969FFB568DD31403CE560DCC8EE53176E494B4CC7360F1B89D84010C969B21CE5CEFCF7D30569A1025E91B7DB3A526CB27F90D5307FD072FDFFEDB3F5B65B058A264F3DED5F9FEAC1F134190A889558BE134F75201899EBEB76DAD21733DE557A246FEF11852ADF4B1056BDDAE9E7CFC757E26616A2F2A7AF063AD5CBB49A0907E84A7D24D3BC3301E6EA2708D6B84725591E8287C7DF9E3EB32DC8F696E5F5F538CB93C472748AA01C5B9D81654D41FB5DDDDB3F05AFE809716ADE2C06878348BB5C93ABA855BC00F1F3B33BBE94D9FD8220A4495A656F894DE6EF2252FA5BA3BCC4BB19B84E6FBFAA54EBA2C36927565DB4073611AE610B17A2544A1C8869DB15D4CC40B73BF14F09E74DC8F70BBF39971CBF8B1DDD5F1E494BB4A6392AADC46C242A5F256990F29081A41946995433865E737D40D2E5261C1086ACD66775FB1AC90AD5A25E7E0F9A79A35F038F05DEF200EF85F307E3F9D3E2AA71017E37DCFC08E2BAF009E7D7165E9B60760C65A31A9A3FAC686870B0E2639FB6D8A8BD26CA61AED1A54DD140E4241805478357514E2D16A05F0D71D90E17C4824863B2C1E70DC059C3CB917E2B65029D5B8E1F239CB0851B35390638ADD1E7B8361738A0E9A1E04FCCA740569A3B33526FFC0046335F97A2FFA0CA4933B406629FF0F5DFCDB2DA98C4FD5D50AEAFAD50B286E18AC7EFB02B00945BD4B3EE3899AB1F6AD2A887B1EB65C3690EBBB6B90910F656CD81ED0A109DBC6C1B132A0A4B07FECF61C38DCDBD543A594D7B74737BB947A15DD642F39A2637FE9F16559FD3FEBAAC7E3221741488A54E66C91F19DBBCA4984AFFB860D4D79CE9101D12453AC1E5F94BB725A5867EA353E0D44FD1EDAAC25D559726BB5CAF2BCDB6C232576CEA9C78DDCDEEA007DD3BB0A274ABFD136387693D78CFD6F0DBE1953E8879E9D9AC84017AC55F355B08FFC6BA5CB4166448BBCD6D34FE976CFAC2557C74C89F519EEF7DA6AD34E6A4D7DB918D15724DDF5B687C1287A1243AD2D0FB81AD5E809B60E2E69C60E02F69DD79738E25FB2AE5111E6A8F66273A4EFAAAD5CCC5F744355B458DFC0B64B644D1C256B886D937027AF3AEECD2E82B33B36B47BE6733ED57CA516CE3D0AF32C96601F4005E0B6AAFD84641D5FB22DB15747986B9108820DEC927617C08AB197C2F4602C578132B5ED633A506A549E5159776C5A9364B2F08BF719F93A88A38DA59A3D6F61B66A24E5DA110AFDECF8D10B99C8BD69A9875AAB6CD71EA4E255EEB4F0FF031D68417871052B5DE084B1234C2BF6C6B398DF2D60F19970A5B7BCCEFDA6ACB2DE9F90718555B3EE063A90475D87D46C79B0311DBA766624623F3DE8F1004F557E342952EF8340F3F233E45C85E9C77F826A402E7192844BAE9AEEC7CE44C809E11790FC7CC1B517B4A1EEEDFD715E831883D9091702E20D77BA2F31585877FB62CD84920E92010D3B73FE59E1C3FE618DD9D92EB1DCDCE18A6599067974E403844F1DB4EFE26944105992D93EB761264CEDAB1632D4DA0095A1C9ACF1D1413DF4035CA0684C4C4D5121ABD573F6F6CA84B8D47A685B1CAA223064466ED40E7CBE84B05DD7C387AC753F2DAB3BDBBC7884CBB15667E3F6B6605E9C082506D43840BFF3A3B2C05D55E4D964B20CC0804EEA5AF9818FD589B4FF8064E8F22FADA132F80C83C8B2E9BD224DD4992DEC9E44B71E575F680C71BB882BAB469B25757C10280BC8E5937DB36ABD465F6E4BC4E3FB452F9AD373C56C6E98A22ACF03364D07756BC8C0641786001A32E0E14B569A42EB6978F779FFF385E0A49CAAD31FEA4EA3E955DAFE8E67626298D6B31FBDE4AD00EB6D2F6AD4CA2402BAED3B02E11DC0DA7CCF3292769C5E5C9DF804A63BC4BC830463076CE20ADB7908478D554E416EDBD13385080839DB942FDD4DF29B7EEE3A791389B0D5C29A74D70B1A36EA59335359D6A55E426270E24B3C7FC7446B02A75C214C654C93FFAF6C57AF644F98DA56F6148B3619872FEC5060286C433ADF25FCBCB43517EC06D284DE7A3607645FB746D678ED1CB28D7980A0950E1863D99FFBE2D41163DFD8456A4E3A6FD306B4D6007CED7A51E55957C1FC51A9CAF749CE4D41743A9E7B8D20E54692A4C0FCCAFE83B30698EE188FEF14D337535668E823D36A472CB6323D62CC11ADCB6A875DE80F0E1D0B09F9221639C8D5BEDE75F6BAE73F000AD2B70E014193910C7C85D18BABF718DD6CF491F211738E93BC885687C9D5A97D5D297D52721455910D100327F3C0280157B29C7F501F881AB28A96317629F48BFC7A2C3ACE8E263757C8D30B09E5FB2EE6680855ABBBF35C757998DC554549EBFE8A54D55EECAB71EDFD016AEE82FE6747DF0E00470650C0F72C2EA14F58D4F0FA78F033E7D6E7875939EF42FCB69262FE1EBAD9AA827ABFC4E1FEE5242AE60B50866F00486AA0EE3DE91AEE84C631A4F1627E649C4CF8E9FCA83A2FB15F7BDF39AA9705C17F161DECFA7976B25EAA54394E8E123F8265BF02DD1EBE652F04435475073FE9CD91A1C2D9C7533DB9E94F9E9104B7CFA81EC69D92C0C60C4E835877E678F5F5471D7F3AF6FC6B94C4959856CF4C0F17321F3B7F370E32E7BCB366EFD52B70DDEFDE014D8D52455340225FEF3CE3010F60AA52F893F9E1B1791BC299BAF26BE90B01D6ED4C2E7E901DD4374D81CDC9F45B0D3B342F76F4D55FB6E7CE2813A60474A8508C306B4C20E348C9A6396C1632EECBFD04671BBF16098C3261304B36E39CFCD11050F238512D0B18A6B16216CD8C76E825217AE6ABDCF4A2737D46134FDC299E3A5A2303DF5616B8EF4BCB7621CA565CA433E51D0B5F8C4FE63258EEA27729EB03DD04DAE72DB79218B3B56BD745CB867010C006847B36D12F9FE412BD250FE42406B53418703D85DFFE46BB40317A2C87182C34E2F5766EBAC4D976B74A1ED2063CE7DDFD3E7324F058D7AB15AEE0E891C94A77112E813B8E8E3ADB338DA64E3FF3A96B3B13A200D41D44A23C9D139144A6CF455733037009C3C60807670713792B203DAB30FFA9B7F2B609BEAC6146D5D8F4D0D00465E94CA99DA896ECFFB9944EBFECBFDB2B0575701761BE477EFB168E65789E08F73586D85AD2EEAE75EDC85FCB4FB2472F592063901A9AFC95310098E8C967A677F1199AC60086D03CB156A8E78EB5752DE7C73835023B6CE103042A30F52D86707C88A1BA69F51F307A9EE639C0FE030D29A1AB4E16550DB9DAFA0C7CC0B79FD45F2D16B571BB6B19D48DFBFAC350E362AEA420CDB24E4F68F39CF086BD4EFB97DAD9F00B27B1B5672077D89C668C7B65C31419E5AC06E1D21F6B9418C05B39D87335C031EB3C236350D498D053EFFEC50D8C7292DEDFBFC88347742CFC38725819EA77994D64566776077B3E642A80F9045FF917208B489F060F0E0E098EACB2FC5064818CF1B96DDC697B79230730A442330E841922191DB521DECF97DFD91E288E2FD0C1173E7631A8C0256AB2F96DB6EC9F13B51AA1E954732C1DD77F90ED2EE7BF83314BA88779021066E34B0FEC7278CC38BA3937C564A30222A996B15608489E7062EA1763156CADDF3797D751380CF89B0E7361141CD37A76885AB0F2BF14169148B0FF43A1AF78C70CB082F3A95CBDA2E0CE49802D2DB4CA66CD220B47EC0074F77A79DD3D7F92E57A97433C2C2B3072326211AEC4A1A60B24176C6A00A933A092D3B0D7B6ACA3A9E0C735504E4DA6CC0CBDF95DF7BBAE3284A4298C50EBD1FCA5B9F002D7E6A92CD2F3F2103A0D2D54CC5828BC5D1F783DAA19C24CEA6D4AEB035CEE1C8F3E58A22FD345187C7B1C87D953F59D0C34802CECD824A5C5F72F0007533CA55D6750F24B48621014CDA331422D9EF53DFA0E022B9E3CF0A313D6D8EDBCF2CBE6A8E71659C74A5E50E707E4CBF0ACFBE90897BFC8923CE18178C9B2D246E9C5542550491FA64DC6FD14638AA947474DB9F441B32FB5ADF75E07CC77A24D5FC81E9B9436E68B75B1D853DC66F9FFB8E94B65610A159FDD02D6652E8A7A24EC4700BAA16E644174057A73AC13B1C6AB64E786ECF349818FA10AE55F8E0ED8C19FBD6BDBA12A7DE0402772F6EB14BA4AD526DFE93C9D60A404B271FFE88B418AA081C1E0B1210FD1CF4193FCEC92BD3956055472C480E6096D62D42D4FA8C5E6DF99EF918A04FFA137D217A7E5FD6A5804A0B96324F151ECCCB68E3BB4179F285EDD1DD04478941046E36A1617C9C70469D5E20453E72DF45C605317AD713CE7116D5FCC8B2DC3AF2C8FCCFC4BF605FB0C9CA730F700B458F8AFCAB882A76BCA3D3E92F180264B7314CFCB130C48014FCF8D9BBCBFB0F1CD0B4D0632BEE25DE9EB89734BB503A71715075FEFDD88E22B6E91386B326AF9512F818BA12F3E99AFF9D67748E2BB20AE9542EEB9EFE50C920832DB97D3F02EB2E394FB3C827BA42B8A8113692F8A2FC34F1DB472C8AB384D57458311412FE73CE657C951AB3F6960A7154B6C7BEF23E753CF1924616A8029213B9F8A36F5A6BFAD324A51860A43ADA8CFD9270BB1DDF70B3185832456EFFE1BC1A94126EA734618552BF90A967A8FA780CD1D560F72F81F1AEA3F7D6CCF5DEAF5D257EB69A2100855F37E9B8319809D66D0249A2B59878697F6A581489110FC915854EA0AACD83EEC9B86A31995DA8FDFFD68775C95E6B479F4C88712D0A13E5B3C15510FBAAE658232CEF02DAD0E7E604EA8055975F4BCB9B2F738DE97D8E4091718F6E0BEAFED8364C8A40AC3C7F42BE51A94880CAAAB46F238A7D225F2BFBE75C100E28AA8E120032C2D624DB7AF0A2C22BED89F71A999117E91DEFD88B8EDE3A2850E3807CBFB5F7E333E8FE2C28221BE8438CB69A9E4A8466A850CB79C55DE858E8255342691FFD5FAE59AFB5A100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid2330 putdup 34 /gid1325 putdup 35 /gid3524 putdup 36 /gid3357 putdup 37 /gid2264 putdup 38 /gid2676 putdup 39 /gid7089 putdup 40 /gid3028 putdup 41 /gid4913 putdup 42 /gid7623 putdup 43 /gid4658 putdup 44 /gid3504 putdup 45 /gid1675 putdup 46 /gid3548 putdup 47 /gid4137 putdup 48 /gid4952 putdup 49 /gid2642 putdup 50 /gid1683 putdup 51 /gid2802 putdup 52 /gid4569 putdup 53 /gid1426 putdup 54 /gid3247 putdup 55 /gid3373 putdup 56 /gid2855 putdup 57 /gid2839 putdup 58 /gid3231 putdup 59 /gid2903 putdup 60 /gid1431 putdup 61 /gid1473 putdup 62 /gid6754 putdup 63 /gid3701 putdup 64 /gid1391 putdup 65 /gid7186 putdup 66 /gid1746 putdup 67 /gid2626 putdup 68 /gid7167 putdup 69 /gid2388 putdup 70 /gid1698 putdup 71 /gid7483 putdup 72 /gid5422 putdup 73 /gid5497 putdup 74 /gid3547 putdup 75 /gid2291 putdup 76 /gid3721 putdup 77 /gid18 putdup 78 /gid2785 putdup 79 /gid1613 putdup 80 /gid3498 putdup 81 /gid3461 putdup 82 /gid5048 putdup 83 /gid5226 putdup 84 /gid3238 putdup 85 /gid3678 putdup 86 /gid5233 putdup 87 /gid5064 putreadonly def/$SubFontArray [/AAAAAD+PingFangHK-Regular findfont ] def/CharProcs 57 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid18 {(\001) 0 $SP} putdup /gid1325 {(\002) 0 $SP} putdup /gid1391 {(\003) 0 $SP} putdup /gid1426 {(\004) 0 $SP} putdup /gid1431 {(\005) 0 $SP} putdup /gid1473 {(\006) 0 $SP} putdup /gid1613 {(\007) 0 $SP} putdup /gid1675 {(\010) 0 $SP} putdup /gid1683 {(\011) 0 $SP} putdup /gid1698 {(\012) 0 $SP} putdup /gid1746 {(\013) 0 $SP} putdup /gid2264 {(\014) 0 $SP} putdup /gid2291 {(\015) 0 $SP} putdup /gid2330 {(\016) 0 $SP} putdup /gid2388 {(\017) 0 $SP} putdup /gid2626 {(\020) 0 $SP} putdup /gid2642 {(\021) 0 $SP} putdup /gid2676 {(\022) 0 $SP} putdup /gid2785 {(\023) 0 $SP} putdup /gid2802 {(\024) 0 $SP} putdup /gid2839 {(\025) 0 $SP} putdup /gid2855 {(\026) 0 $SP} putdup /gid2903 {(\027) 0 $SP} putdup /gid3028 {(\030) 0 $SP} putdup /gid3231 {(\031) 0 $SP} putdup /gid3238 {(\032) 0 $SP} putdup /gid3247 {(\033) 0 $SP} putdup /gid3357 {(\034) 0 $SP} putdup /gid3373 {(\035) 0 $SP} putdup /gid3461 {(\036) 0 $SP} putdup /gid3498 {(\037) 0 $SP} putdup /gid3504 {( ) 0 $SP} putdup /gid3524 {(!) 0 $SP} putdup /gid3547 {(") 0 $SP} putdup /gid3548 {(#) 0 $SP} putdup /gid3678 {($) 0 $SP} putdup /gid3701 {(%) 0 $SP} putdup /gid3721 {(&) 0 $SP} putdup /gid4137 {(') 0 $SP} putdup /gid4569 {(\() 0 $SP} putdup /gid4658 {(\)) 0 $SP} putdup /gid4913 {(*) 0 $SP} putdup /gid4952 {(+) 0 $SP} putdup /gid5048 {(,) 0 $SP} putdup /gid5064 {(-) 0 $SP} putdup /gid5226 {(.) 0 $SP} putdup /gid5233 {(/) 0 $SP} putdup /gid5422 {(0) 0 $SP} putdup /gid5497 {(1) 0 $SP} putdup /gid6754 {(2) 0 $SP} putdup /gid7089 {(3) 0 $SP} putdup /gid7167 {(4) 0 $SP} putdup /gid7186 {(5) 0 $SP} putdup /gid7483 {(6) 0 $SP} putdup /gid7623 {(7) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F1.1/PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 892 204 rc
1 0 0 -1 1 132 cm
49 0 m
91 0 l
105 0 112 0 120.4 1.6 c
127.4 3.2 134.39999 7.1999998 137.2 11.2 c
140 16 140 20 140 28 c
140 52 l
140 60 140 64 137.2 68.800003 c
134.39999 72.800003 127.4 76.800003 120.4 78.400002 c
112 80 105 80 91 80 c
49 80 l
35 80 28 80 19.6 78.400002 c
12.6 76.800003 5.5999999 72.800003 2.8 68.800003 c
0 64 0 60 0 52 c
0 28 l
0 20 0 16 2.8 11.2 c
5.5999999 7.1999998 12.6 3.2 19.6 1.6 c
28 0 35 0 49 0 c
49 0 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 71 92 cm
/F1.1[ 16 0 0 -16 0 0]sf
-64 -5 m
(!"#$%&'\()[ 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
-56 17 m
(\)*+,-./)[ 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 1 132 cm
249 -40 m
291 -40 l
305 -40 312 -40 320.39999 -38.799999 c
327.39999 -37.599998 334.39999 -34.599998 337.20001 -31.6 c
340 -28 340 -25 340 -19 c
340 -1 l
340 5 340 8 337.20001 11.6 c
334.39999 14.6 327.39999 17.6 320.39999 18.799999 c
312 20 305 20 291 20 c
249 20 l
235 20 228 20 219.60001 18.799999 c
212.60001 17.6 205.60001 14.6 202.8 11.6 c
200 8 200 5 200 -1 c
200 -19 l
200 -25 200 -28 202.8 -31.6 c
205.60001 -34.599998 212.60001 -37.599998 219.60001 -38.799999 c
228 -40 235 -40 249 -40 c
249 -40 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 271 142 cm
-64 6 m
(01*+234\()[ 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 1 132 cm
249 60 m
291 60 l
305 60 312 60 320.39999 61.200001 c
327.39999 62.400002 334.39999 65.400002 337.20001 68.400002 c
340 72 340 75 340 81 c
340 99 l
340 105 340 108 337.20001 111.6 c
334.39999 114.6 327.39999 117.6 320.39999 118.8 c
312 120 305 120 291 120 c
249 120 l
235 120 228 120 219.60001 118.8 c
212.60001 117.6 205.60001 114.6 202.8 111.6 c
200 108 200 105 200 99 c
200 81 l
200 75 200 72 202.8 68.400002 c
205.60001 65.400002 212.60001 62.400002 219.60001 61.200001 c
228 60 235 60 249 60 c
249 60 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 271 42 cm
-40 6 m
(#$05\()[ 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 1 132 cm
400 -35 m
600 -35 l
600 15 l
400 15 l
h
400 -35 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 501 142 cm
-80 6 m
(6789:\),-.;)[ 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 1 132 cm
400 65 m
600 65 l
600 115 l
400 115 l
h
400 65 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 501 42 cm
-80 6 m
(<=>?@\),-.;)[ 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 1 132 cm
660 15 m
890 15 l
890 65 l
660 65 l
h
660 15 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 776 92 cm
-104 -5 m
(A1BCDE#$FGHI\))[ 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
-100 17 m
(JK*+2L,-./MNO)[ 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 16.000000 8.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 1 132 cm
140.43661 22.390844 m
190.51819 9.8704548 l
S
0 i
CM
199.27933 124.06983 m
190.79057 125.03997 l
192.24579 119.21912 l
h
199.27933 124.06983 m
f
0 J
0 j
1 0 0 -1 1 132 cm
198.27933 7.9301696 m
189.79057 6.9600267 l
191.24579 12.780882 l
h
198.27933 7.9301696 m
S
1 J
1 j
0.60000002 i
140.43661 57.609154 m
190.51819 70.129547 l
S
0 i
CM
199.27933 59.930168 m
192.24579 64.780884 l
190.79057 58.960026 l
h
199.27933 59.930168 m
f
0 J
0 j
1 0 0 -1 1 132 cm
198.27933 72.069832 m
191.24579 67.219116 l
189.79057 73.03997 l
h
198.27933 72.069832 m
S
1 J
1 j
0.60000002 i
340.5 -10.000012 m
389.60001 -10.000012 l
S
0 i
CM
398.60001 142.00002 m
390.60001 145.00002 l
390.60001 139.00002 l
h
398.60001 142.00002 m
f
0 J
0 j
1 0 0 -1 1 132 cm
397.60001 -10.000012 m
389.60001 -13.000012 l
389.60001 -7.0000129 l
h
397.60001 -10.000012 m
S
1 J
1 j
0.60000002 i
340.5 89.999985 m
389.60001 89.999985 l
S
0 i
CM
398.60001 42.000019 m
390.60001 45.000019 l
390.60001 39.000019 l
h
398.60001 42.000019 m
f
0 J
0 j
1 0 0 -1 1 132 cm
397.60001 89.999985 m
389.60001 86.999985 l
389.60001 92.999985 l
h
397.60001 89.999985 m
S
1 J
1 j
0.60000002 i
600.49194 8.2712612 m
649.76776 17.230501 l
S
0 i
CM
658.63873 113.33842 m
651.30438 117.72111 l
650.23108 111.81789 l
h
658.63873 113.33842 m
f
0 J
0 j
1 0 0 -1 1 132 cm
657.63873 18.661585 m
650.30438 14.278892 l
649.23108 20.182112 l
h
657.63873 18.661585 m
S
1 J
1 j
0.60000002 i
600.49194 71.72876 m
649.76776 62.769527 l
S
0 i
CM
658.63873 70.661552 m
650.23108 72.182083 l
651.30438 66.278862 l
h
658.63873 70.661552 m
f
0 J
0 j
1 0 0 -1 1 132 cm
657.63873 61.338444 m
649.23108 59.817917 l
650.30438 65.721138 l
h
657.63873 61.338444 m
S
/Cs2 SC
0 sc
1 0 0 -1 71 148.5 cm
-32 6 m
(PQRS)[ 16.000000 16.000000 16.000000 0.000000 ] xS
1 0 0 -1 411 185.5 cm
-32 6 m
(TUVW)[ 16.000000 16.000000 16.000000 0.000000 ] xS
1 J
1 j
[
8
4
1
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 1 132 cm
365 -70 m
365.00195 130 l
S
ep
end
%%Trailer
%%EOF
