%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1710.000000 389.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.2 (Build 18C54) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1710 389
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1710 389
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /e put
dup 35 /d put
dup 36 /u put
dup 37 /p put
dup 38 /space put
dup 39 /S put
dup 40 /t put
dup 41 /o put
dup 42 /r put
dup 43 /a put
dup 44 /g put
dup 45 /E put
dup 46 /n put
dup 47 /i put
dup 48 /F put
dup 49 /l put
dup 50 /C put
dup 51 /T put
dup 52 /h put
dup 53 /H put
dup 54 /s put
dup 55 /k put
dup 56 /v put
dup 57 /c put
dup 58 /parenleft put
dup 59 /parenright put
dup 60 /L put
dup 61 /O put
dup 62 /b put
dup 63 /j put
dup 64 /A put
dup 65 /m put
dup 66 /z put
dup 67 /W put
dup 68 /three put
dup 69 /G put
dup 70 /M put
dup 71 /f put
dup 72 /y put
dup 73 /X put
dup 74 /N put
dup 75 /four put
dup 76 /P put
dup 77 /I put
dup 78 /slash put
dup 79 /B put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<











00>] def
/CharStrings 49 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/slash 4 def
/three 5 def
/four 6 def
/A 7 def
/B 8 def
/C 9 def
/D 10 def
/E 11 def
/F 12 def
/G 13 def
/H 14 def
/I 15 def
/L 16 def
/M 17 def
/N 18 def
/O 19 def
/P 20 def
/S 21 def
/T 22 def
/W 23 def
/X 24 def
/a 25 def
/b 26 def
/c 27 def
/d 28 def
/e 29 def
/f 30 def
/g 31 def
/h 32 def
/i 33 def
/j 34 def
/k 35 def
/l 36 def
/m 37 def
/n 38 def
/o 39 def
/p 40 def
/r 41 def
/s 42 def
/t 43 def
/u 44 def
/v 45 def
/y 46 def
/z 47 def
/uni2B91 48 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94D62A069D16B42DC713A3CCB6051AA434463E2559D7E1B4AC0CAF8C8980CAC59FE7105820AA3180D546B3C4172B151F9C12D4EDF8AB4F537563E20A6195834682B37CE591441AB2FCF7A4FCDDD8687681BC7A50F1BA945769808EC904E3C1BE904BACDC0D05810E5758C377A17ED8CC5C14EB1C972A388C49F3EC6C2F8FF16D699CCA446EEB5894DB3CB8C2C4B1468DC15B0FC460A75C7533505BFBCF6B8BF267065FA65FCF2FF3456B0289EF7A8F8790D3A19CE4BBCF45D01FBCE6B4D88A03138708B63851272ECD88157B6EEB3D7BD6189B52A00D02F6FFD8FCBC75B1F9A3FA43D9AD33494ACC9891A560210E6F2DDA814453D915C149FB5865E488F6A3C32B9040D08215E280AA923686B2AD339B37727C44E57AA17A7CEEF7B960D0CD68B61B6259585C67A0E3C18D29E39DFE0D3D8EB08C046BDAACCDB3F91B7023EF1128E1117A868D6B511C012A2C9E76D4779703BBF5A1A81CB444988AD928C6AC1DD0EB8B5ADDE168A361DA4834251E5C3BF9F294D36AF681A46B2BECF9B4883BE10FD39B5099EFA3A5EDC360F46EFE21D6FE051B56DEB5760F1C1DA93C3943FF5C33412F24F84B457CEC1E07A7474E03A30432E940A6CFC107F24FF0A5731D960A5CBDD8FBBA29E8D95A7E41A6F1ACD0A9FA350D8CA881F169EFC57BB5BC4B2DCDE7B3BB7BA968ED83A1C103B4618B3EEDF52E369B127197E1EAEBF47CF3978AF8C420EA2329347054972E0779A19084906DF7F8DC7739E3B7E1265138DC18E6FB57
F7FC62A78C5DD6998A8E52D82F983D396BA7D6FC43892844C3E758667D63768AA951E74CE1685ABCFB2C1AF57CA1B8D2F495BF1DF0A9EC5CD9F8CC590E0EBFEE36EEB734CDAD07C326D81D468653CCBB91CD454DA24794541896A7E6A7D9AB0801A4FFD834FF9300F09412B1086A615A589361C3C6CEDFED47095DC203EEA076AB141EEA0529006ACA3FED560F7B7A5741D18020E5B1D3CCD0744969A89AB6FA3413D5356811FDB2C4C682AF1E49768B4A568BCB38B704AB2834D0CE522F851AB9A41AEB949FA51FE462344A89C6F02A0CFF1BAE9927727D585EAE81E7A52A48AD176390CE66E490364C856F738CC6793D551CF523721A9F7AD0B945505C094E1608D70FCE4B61CC49D5E0B16C642957994A04AD9CF28DA1834FD5B8D809D2DFEDC90A3174918FD463F02DF7226E2C066306BABB9BEA2118742DF7A2BF0F6F4E179EAEC9FB2580FDA2549CDD6848AB63E67A6A9F274CFC11BABD12D88FB6953893F2D93CC1F70C4F272C7F9E867F9EBEED3DB1A5D3A93263191975767F8A8B414ACA0EE7CD8448E84C8AB5B67F93ACDF7D8B8A3F164BB9491B9060BF341AB875AA44CD44475AA43E685E5B98ABB11D3ED4C521F2B35976F2277E0E920E295B8C4299DFC073EB64AB29B17E08C56B710BDBE426AED590F044A90B48EDD68A35170544264782329E0EADBD067E89426F8090584FA12C1C9AE8441D2BFA6E70FDC2AC098EBD0679E3A9FB09F88F46C6675DDD0E9D1954CBCA02ECA7181E27F72DF0A6AC1559828EEED62CDB5F73125560F30AFD4B341D72849FA221CFFD6307F6043CDE393EE0813D9F6EC7EB0E7203301BAAD61A556A22C5BE87FC1E9E60A55C5AD04BCDAFCDBF016819C5D9D2E2F9D2EA4CB6D14152F6F7365BD29151E7D04BB635A9788FFEB6572970420A3D202A40164A09CAD04AACA54C9D78B846C924617C2C998ECAD589C5CBAB6071D013C32D33CC09264131C2EBDC061E8AE688C85F41D41B23D20E76DE3EEF12B1B396DCDB76F992096B4F215B6978D7B5109824DE628AFF81C39A640557BC7CCD7CA3ABD8C1FB099BBCB9C93E9461B42BCA960B279042453897C474F80509DA76A7A3086FCDC5781A694C1E9E701345D9C6B3C067029DE586AB3FD0D13815D417DF6CC17C25F7A679E150E84558382EFB564BA2932ACA98167CC133504C50B7D16F903751D1C613CCEC6EBB2112187066BF6FF9E2EDFBD6BE0738439AB7B36114C9381E008690C0FFA1FA220364F6E191A12C130E85A94ABB4903921CA8A835780BE4C4110EF525D188559F69F2EC2718747561DFA32F155DC7C048F7BA16C2AA339A3762CFA594F322541999B0A1F866BD5AB0A510F670653A1BF32E397BFFDB876ABD62532A949A5F5F6AE91FDA71725E849F0ED6320D9083CE0D9DA0A7C1711FC1A124BBF25CE6A584FF2222DE285F86B45EA8E0
58B8EE781C26B86EA41AC80CD9A56A96E294ACCEBF98D4E3D48B73BC0D3358432EDB2122FBE07CDDCEC568BD06EA94C9E2D5F7A5D000A5E718BB68CA2527C25AC77274C791054CD1E759E596CC44929B35A3D8747F59E3FA5A3FD06A855D96E8C6DD881FD6EE6493AEA2E9898E54274F7D231F5C82725FA0F66C31A5A7D1AA603C4CD0C3D3AD84C2D37BA43F66633B684EF1D636CA04C5076B4E9D5FDA8D5DB60D0CD1519B74345FDE24143124DE622042306A5177BA209A143F4BD78EBD219B7447D0F697795810868DA21792DF7B4FAE67B1ED989E9BC9C68AA70A5B4A6C63B887D19D0C8403127AC68B8873A0308817AD023B8C62E9BEAC9D52057B7095C122B13E1E45B2C531674243789336CDBD60779596F0FC7A37F5668A37664C8C2F938F70FC89A4F236993A0FF3DCF32479A4C58FBCAC413809E78890EF7C58EEDFF972C38DA89288313EF0D434CD06F8B79FCAD6A8E299CFA8ACC936A10E721779DFA505EA9808EBE4A1A94A29078DE0A076FC60751021B66BCF3BEF75B66D792433C3B78B1E152EAA5DAD56EC1D8B49CE2A39158B428A797592034322F34858FAEDF57CF2D1DBAD21E56DE4D1E4B6C1A5EF22C6AF402471F9B215D1B0219CC7854568F1008C72B8AED5E79F054579864EB46C9606E50E90E81C98D3C6FF5E1B84570E7CCFA46077370D9EB44103B85A600F4BBDE5E74FFEBD475596A53BE2C7AB17088AFC23EB73935246EBA7612E4D58A13A5E29CE26946912C2936D3447ED9D0F50E7E8ED3EC54A46F14C9B791BA1FD7E2B251D56575BD0780362C097C973788B4A366F71A896D094C75B673E6392A0619AC8CFFB58BBF9C332963F4FB35767CA876BB33417FF5F49C41280CF45ED9751B20AE4812EF83F4C25EC1455FEC788B1776E7E5B0CA5C97A62AC74AA2AC62149C30FEE24B35D818D57722FBF55C506E3109316E718E844846489E90C5B0389B26557CA4D93668064B20D464E63C6E0FAF015AD0B16FC08D6DDD28D40AD368926EFAB560DC57240A673C5285CC30235279E90490C318ED2013047D2E0A28B40B733FB1F5EE2C5045E056445A04BE3DA591A5A61F88F87B0359EF67275598CE7825E02BA22D30F7BBFE22DAF0036BA6C59373981ACDFB26971F8E20D05C8A82F4498494555ECF1AF61F02C4CD03D135BAB315874947DCEAA32DCDAA2CD3AFC84A4BD9CB0D657B3036AFCE735BADFDD3A1E8CA8DBB96C4FB14CCB7FEA22352EF17A40D5046664D14DE61EBD371CC669DB22B17F1BB4BBA5C14458F317FF6770AF2655E4502B4A7E37A9CAB225D75B7156C2C7BB7530483857907E115BB124EB592ACE6A50149158E198D2D422749068BA1C414E92DAC557768A89329B597EA73F2DA8E68F74CC83C5EBCA0B8E43037BD35BB159B79EABEBC5AC63E04490A262AD471343754D01E131A066892FA788D63E


5D97011F901DCBE29379FD26384B6CAA40382798F26980F2B9CDFEE3685AEC3DDD46807F1751781B816202799BDB58851AAAB4DBEC70E646E10E0361DE678397D8B3F762DDFC056FB6CE3BC7862F9B51D2887FE550ABE4109C439EC70CF9769D09E2BF85694B97ABBD7BBCB752DF41C85F559BBD3186CF1E0722936BB659F3F07169672C90D32C3D48882C6F9D19593119CC968F86DB8CBD6BD3D14809033AC896EB54E6D31EA6BBAFCEFB1F42246886C789AF86669E48E0F5A14AB805C6B02EF6ED964B9BCD595563E04DB436944DF74026DB7F93C6EA69BBAFDAD937C483ECF51FE0BDBCFD092A0FCBBE4D3CBB9B6D13ABF2F4AFD5D8689682E045EAD1C459B2E52CD6D2416F0B5AFFEC4F602FD3FF89CE986B57B4E41444F1E5EBCB0F3E8F234C69BB1BE27016563B255AD81C5DD70AAABA4D280F8BDAC87CF13D05539F6E3958279A839547080890ADDD068DFE12175364B25C9775D39478403A9AB2FF663BE3F3A6521DA310AB1E7AC4DBA1B6EE6859ADD203ACA30062111A012D8356F8D49FD7D9640BFC5CB069CD7D62D02192444989363C2A5C842790972CE63729BC1D646788E65343B22F075A6590299634A51081D12FB7953404E687EA67FB29A38AB975AA40D6B53F83C4785FD38624E7B3297B48B9BBA4A9F8CCA0F4254386A7B6BF4F837C3FB482698B3A215968A0B77C527A8DD0AEAC8C2F0F236802E5BBD55AFFE697ADE812C7B5C1FE72E776D83B4B6F67F9E3BE4BA505DACB5963B84C83410608C092350F70B4F545F77CAB27508B08972FD7FE7F89EB78BA45B377100838EBF474502E28C9D4E35606297FAA733ADBF63A0D69917BC6E132A2BCA48B37F268F2CD18846CDE0859B5FD31CC285A07A486E1050DAD5ADB0CA1DA0EA09C08CBA7513F075543628C2444C6CD412FFF3A1FE9ACA47CBC1E92694AD4DECC903C368F0D60657645C00184B7CBD8996D03EE030964E453D1DA4D3FB69265BA2A82CD2A8AD9B64D0C21659D2D9B49EC17DC04CA5D033D72726BE9EDF104ADECC0F502432DFDFCC7C8B55DDAC0B2893009B07250E6C8C7FDDFEF23EDE35AD2CC1291750ACAECB72585F076253492AD0255AC1CE6CB6BCD5ADE64A5D6CB93BEDB6D57D5A204A0CF33AD3EA7A1213A18C996039135492627A18580BD23A9A93921AC09E55B539399B2C1096072B0E76153E4946791217200382CA4C287FA352F9FB084FD89ACD490D9B61B808D0274AA81904FDC84B4FB4EB1BB7A2EDE8EAAE670C819069E4EBE20E1A1AF1CFDA181E43C06E61FAA27FCCD382B18885FF30820D2B5CAF7FF2FC22DC163F4B59A74B9A812DFEE3BC77BCC64309EC1D305949ADD1A5B3772353DEE6F91E742836D3C3009DA8CC44059FDF48E6216D77A18F4B74F792402D50819C848CB89CF3ACCC6915D380B63D24D3B5D4927DBD417BCCD6356E46D70

EBB07A42F72A95D89F198CDA7D71FCA40B7030AB777D6E8EF28DFC3F21C086E32B8BC9BEE68C3EFECE3A91E118AACF3E5B6EE0538C10E8C3FA0172DF92B96485E4E7B5E468E1E465485E633D39B7D7D11FFEA25C7FD24713CF7F841A20E338E2FC19C56F305C1035777F1722E97D0AFC2FCC0A71E400BCBCDC2729BA795477458B2BFE822F2CCD416C58650C4C6E03FA6DA3ED0DF7F6DD165508E20A62F0F4988A11DDA10C8375CE6C77D566B5DB55B9DBBFDDDC1E676A16438603F661B02F7492255348D27C295BC13BF7B78F121C3B75C72FDDF48B62163C0C21DBDFA1E23BF66AEA9B0AE328A8E63F306D20B462325207945370963FE12C3AECCC1D34C638AA9356F39EAB3AEE1C14D9FA3CFF564DD3F3B027EBF765F10D411976C9C1F3BD680ED82B9D89237E02F8E1265BB44740B7CBE0C98074CDEEF40AD8E102B5717ED98C1E0B854EEFC640B4EA42F4A9A3E8D12E869C93AECD424E6EA233EDBB1402200BB2127EE28EEE4141A82720DF6D28AED1A2875BD513922756A47E97B3CFFD1BD54A7398166CA56A2B12D2484662BA849492AD48692FB29772613498941880D4DE2305821D9EBFDF9550CE8A086BB53D49DD8F4EAEDE0B63839C126ECD3AA8E4C93F6D272E5D5D33A613F5B53486FC28CF725C2B42278A3C152258D7406043515F643D5BC8B7A3EF474A4A9B33F0CAA60EC54B49D5D3E9B58B176F9F89B04D560C99
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 1710 389 rc
1 0 0 -1 -161 534 cm
410 146 m
1160 146 l
1160 529 l
410 529 l
h
410 146 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 624 196.5 cm
/F1.1[ 40 0 0 -40 0 0]sf
-370 -148.5 m
(!"#$%&'\(\)*+,"&-.,/.")[ 28.160000 21.480000 23.720000 22.240000 23.720000 11.120000 25.920000 12.600000 22.960000 13.320000 21.480000 22.960000 21.480000 11.120000 24.440000 22.240000 22.960000 8.880000 22.240000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
162 146 m
370 146 l
370 529 l
162 529 l
h
162 146 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 105 196.5 cm
-96.32 -10.119995 m
(!"#$%&0/1"&)[ 28.160000 21.480000 23.720000 22.240000 23.720000 11.120000 22.960000 8.880000 8.880000 21.480000 0.000000 ] xS
-61.119999 38 m
(-.,/.")[ 24.440000 22.240000 22.960000 8.880000 22.240000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
465 212 m
745 212 l
745 292 l
465 292 l
h
465 212 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 444 282 cm
-119.28 13.940002 m
(21/".\(&34*"+#)[ 28.880000 8.880000 8.880000 21.480000 22.240000 12.600000 11.120000 22.960000 22.240000 12.600000 21.480000 21.480000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
425 389 m
785 389 l
785 509 l
425 509 l
h
425 389 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 444 85 cm
/F1.1[ 36 0 0 -36 0 0]sf
-163.692 -9.0079956 m
(5+64&24$.7&'"*8/9"&)[ 25.992000 19.332000 18.000000 20.016000 10.008000 25.992000 20.016000 20.016000 20.016000 18.684000 10.008000 23.328000 19.332000 11.988000 18.000000 7.992000 19.332000 19.332000 0.000000 ] xS
-94.968002 34 m
(:52'"*8/9";)[ 9.324000 25.992000 25.992000 23.328000 19.332000 11.988000 18.000000 7.992000 19.332000 19.332000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
884 394 m
1144 394 l
1144 504 l
884 504 l
h
884 394 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 853 85 cm
/F1.1[ 40 0 0 -40 0 0]sf
-99.639999 -7 m
(5+64&'\(\)*")[ 28.880000 21.480000 20.000000 22.240000 11.120000 25.920000 12.600000 22.960000 12.600000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
884 465.8497 m
970.66669 465.8497 l
970.66669 504 l
884 504 l
h
884 465.8497 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 766.33331 49.075146 cm
/F1.1[ 30 0 0 -30 0 0]sf
-34.724998 11.080002 m
(5+64)[ 21.660000 16.110000 15.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
1057.3334 465.8497 m
1144 465.8497 l
1144 504 l
1057.3334 504 l
h
1057.3334 465.8497 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 939.66669 49.075146 cm
-34.724998 11.080002 m
(5+64)[ 21.660000 16.110000 15.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
970.66669 465.8497 m
1057.3334 465.8497 l
1057.3334 504 l
970.66669 504 l
h
970.66669 465.8497 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 853 49.075146 cm
-34.724998 11.080002 m
(5+64)[ 21.660000 16.110000 15.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
884 212 m
1144 212 l
1144 322 l
884 322 l
h
884 212 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 853 267 cm
/F1.1[ 40 0 0 -40 0 0]sf
-111.52 -7 m
(24$.7&'\(\)*")[ 28.880000 22.240000 22.240000 22.240000 20.760000 11.120000 25.920000 12.600000 22.960000 12.600000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
896.33331 250.15028 m
983 250.15028 l
983 212 l
896.33331 212 l
h
896.33331 250.15028 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
1057.3334 283.8497 m
1144 283.8497 l
1144 322 l
1057.3334 322 l
h
1057.3334 283.8497 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 939.66669 231.07515 cm
/F1.1[ 30 0 0 -30 0 0]sf
-31.395 11.080002 m
(!+\(+)[ 21.120000 16.110000 9.450000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
809.66669 250.15028 m
896.33331 250.15028 l
896.33331 212 l
809.66669 212 l
h
809.66669 250.15028 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
970.66669 283.8497 m
1057.3334 283.8497 l
1057.3334 322 l
970.66669 322 l
h
970.66669 283.8497 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 853 231.07515 cm
-31.395 11.080002 m
(!+\(+)[ 21.120000 16.110000 9.450000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
723 250.15028 m
809.66669 250.15028 l
809.66669 212 l
723 212 l
h
723 250.15028 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
884 283.8497 m
970.66669 283.8497 l
970.66669 322 l
884 322 l
h
884 283.8497 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 766.33331 231.07515 cm
-31.395 11.080002 m
(!+\(+)[ 21.120000 16.110000 9.450000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
360 247 m
398.10303 247.63506 l
S
0 i
CM
251.50104 286.12497 m
237.19302 291.76419 l
237.01305 280.9657 l
h
251.50104 286.12497 m
f
0 J
0 j
1 0 0 -1 -161 534 cm
412.50104 247.87502 m
398.19302 242.23579 l
398.01306 253.0343 l
h
412.50104 247.87502 m
S
1 J
1 j
0.60000002 i
605.00006 292.5 m
605.00018 366.60001 l
S
0 i
CM
444.00021 153 m
449.40018 167.40001 l
438.60019 167.39999 l
h
444.00021 153 m
f
0 J
0 j
1 0 0 -1 -161 534 cm
605.00018 381 m
610.40021 366.60001 l
599.60016 366.60001 l
h
605.00018 381 m
S
1 J
1 j
0.60000002 i
785.5 448.99878 m
861.59998 448.99826 l
S
0 i
CM
715 85.001823 m
700.59998 90.401726 l
700.60004 79.60173 l
h
715 85.001823 m
f
0 J
0 j
1 0 0 -1 -161 534 cm
876 448.99817 m
861.59998 443.59827 l
861.60004 454.39828 l
h
876 448.99817 m
S
1 J
1 j
0.60000002 i
1013.9997 393.5 m
1013.9995 344.39999 l
S
0 i
CM
852.99939 204 m
847.59943 189.59998 l
858.39941 189.60002 l
h
852.99939 204 m
f
0 J
0 j
1 0 0 -1 -161 534 cm
1013.9994 330 m
1008.5994 344.40002 l
1019.3994 344.39996 l
h
1013.9994 330 m
S
0.80000001 0.80000001 0.80000001 sc
CM
115 331 m
200 331 l
200 293 l
115 293 l
h
115 331 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
276 203 m
361 203 l
361 241 l
276 241 l
h
276 203 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 157.5 312 cm
-31.395 11.080002 m
(!+\(+)[ 21.120000 16.110000 9.450000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
455 212.5 m
540 212.5 l
540 174.5 l
455 174.5 l
h
455 212.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
616 321.5 m
701 321.5 l
701 359.5 l
616 359.5 l
h
616 321.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 497.5 193.5 cm
-31.395 11.080002 m
(!+\(+)[ 21.120000 16.110000 9.450000 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
115 280 m
200 280 l
200 242 l
115 242 l
h
115 280 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
276 254 m
361 254 l
361 292 l
276 292 l
h
276 254 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 157.5 261 cm
-34.724998 11.080002 m
(5+64)[ 21.660000 16.110000 15.000000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
631 75 m
716 75 l
716 37 l
631 37 l
h
631 75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
792 459 m
877 459 l
877 497 l
792 497 l
h
792 459 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 673.5 56 cm
-31.395 11.080002 m
(!+\(+)[ 21.120000 16.110000 9.450000 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
344.5 212.5 m
429.5 212.5 l
429.5 174.5 l
344.5 174.5 l
h
344.5 212.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
505.5 321.5 m
590.5 321.5 l
590.5 359.5 l
505.5 359.5 l
h
505.5 321.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 387 193.5 cm
-34.724998 11.080002 m
(5+64)[ 21.660000 16.110000 15.000000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
865 195 m
950 195 l
950 157 l
865 157 l
h
865 195 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
1026 339 m
1111 339 l
1111 377 l
1026 377 l
h
1026 339 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 907.5 176 cm
-31.395 11.080002 m
(!+\(+)[ 21.120000 16.110000 9.450000 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
631 131 m
716 131 l
716 93 l
631 93 l
h
631 131 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
792 403 m
877 403 l
877 441 l
792 441 l
h
792 403 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 673.5 112 cm
-34.724998 11.080002 m
(5+64)[ 21.660000 16.110000 15.000000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
1144 252.5 m
1241.938 251.68385 l
S
0 i
CM
1095.3375 282.43704 m
1080.8927 287.71597 l
1080.9834 276.91635 l
h
1095.3375 282.43704 m
f
0 J
0 j
1 0 0 -1 -161 534 cm
1256.3375 251.56296 m
1241.8927 246.28404 l
1241.9834 257.08365 l
h
1256.3375 251.56296 m
S
1 w
1 J
1 j
0.60000002 i
1266 146 m
1870 146 l
1870 533 l
1266 533 l
h
1266 146 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1407 194.5 cm
/F1.1[ 32 0 0 -32 0 0]sf
41.967999 181.104 m
(<\),/9&!+\(+&'\(\)*")[ 17.792000 18.368000 18.368000 7.104000 17.184000 8.896000 22.528000 17.184000 10.080000 17.184000 8.896000 20.736000 10.080000 18.368000 10.080000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
1277 186 m
1568 186 l
1568 510 l
1277 510 l
h
1277 186 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1261.5 186 cm
-107.872 -127 m
(=>?"9\(&'*\)\(+,")[ 24.320000 18.976000 7.104000 17.184000 17.184000 10.080000 8.896000 20.736000 10.080000 18.368000 10.080000 17.184000 18.368000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
1132 159 m
1392 159 l
1392 99 l
1132 99 l
h
1132 159 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
1293 375 m
1553 375 l
1553 435 l
1293 435 l
h
1293 375 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1262 129 cm
-121.696 11.052002 m
(@A+B\).&@C'&'D)[ 20.736000 27.296000 17.184000 15.360000 18.368000 17.792000 8.896000 19.968000 29.632000 20.736000 8.896000 20.736000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
1132 92 m
1392 92 l
1392 32 l
1132 32 l
h
1132 92 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
1293 442 m
1553 442 l
1553 502 l
1293 502 l
h
1293 442 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1262 62 cm
-113.168 11.052002 m
(@A+B\).&E1+9/"*)[ 20.736000 27.296000 17.184000 15.360000 18.368000 17.792000 8.896000 24.288000 7.104000 17.184000 17.184000 7.104000 17.184000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
1132 226 m
1392 226 l
1392 166 l
1132 166 l
h
1132 226 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
1293 308 m
1553 308 l
1553 368 l
1293 368 l
h
1293 308 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1262 196 cm
-112.288 11.052002 m
(F/9*\)6\)G\(&@B$*")[ 27.872000 7.104000 17.184000 10.080000 18.368000 16.000000 18.368000 9.472000 10.080000 8.896000 20.736000 15.360000 17.792000 10.080000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
1132 293 m
1392 293 l
1392 233 l
1132 233 l
h
1132 293 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
1293 241 m
1553 241 l
1553 301 l
1293 301 l
h
1293 241 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1262 263 cm
-98.959999 11.052002 m
(E\)\),1"&21\)$#)[ 24.288000 18.368000 18.368000 18.368000 7.104000 17.184000 8.896000 23.104000 7.104000 18.368000 17.792000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
1618 186 m
1851 186 l
1851 491 l
1618 491 l
h
1618 186 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1573.5 195.5 cm
-68.143997 -117.5 m
(<\)9+1&0/1"&)[ 17.792000 18.368000 17.184000 17.184000 7.104000 8.896000 18.368000 7.104000 7.104000 17.184000 0.000000 ] xS
-53.647999 -79.604004 m
('H6\("A)[ 20.736000 16.000000 16.000000 10.080000 17.184000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
1473.5 254 m
1673.5 254 l
1673.5 194 l
1473.5 194 l
h
1473.5 254 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
1634.5 280 m
1834.5 280 l
1834.5 340 l
1634.5 340 l
h
1634.5 280 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1573.5 224 cm
-29.327999 11.052002 m
(I0')[ 19.552000 18.368000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
1473.5 120 m
1673.5 120 l
1673.5 60 l
1473.5 60 l
h
1473.5 120 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
1634.5 414 m
1834.5 414 l
1834.5 474 l
1634.5 474 l
h
1634.5 414 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1573.5 90 cm
-40.287998 11.052002 m
(J30')[ 23.104000 18.368000 18.368000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
1473.5 187 m
1673.5 187 l
1673.5 127 l
1473.5 127 l
h
1473.5 187 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -161 534 cm
1634.5 347 m
1834.5 347 l
1834.5 407 l
1634.5 407 l
h
1634.5 347 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1573.5 157 cm
-42.080002 11.052002 m
(-I3&K)[ 19.552000 19.552000 18.368000 8.896000 0.000000 ] xS
1 0 0 -1 1261.5 364 cm
-40.287998 11.052002 m
(533L)[ 23.104000 18.368000 18.368000 0.000000 ] xS
1 0 0 -1 1577.5 364 cm
-71.407997 11.052002 m
(J+\(/8"&MN=)[ 23.104000 17.184000 10.080000 7.104000 16.000000 17.184000 8.896000 8.288000 10.656000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -161 534 cm
1168 172 m
1258 172 l
1258 242 l
1168 242 l
h
1168 172 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1052 327 cm
/F1.1[ 30 0 0 -30 0 0]sf
-31.395 -6.8399963 m
(!+\(+&)[ 21.120000 16.110000 9.450000 16.110000 0.000000 ] xS
-38.055 29 m
(O1\)97)[ 20.550000 6.660000 17.220000 16.110000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
